{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACvjtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACntHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChDA;;;;;AEAA;AACA;AACA;AACA;AACA","sources":["webpack://crypto-explorer-extension-v2/./src/popup/popup.css","webpack://crypto-explorer-extension-v2/./src/popup/popup.css?f2c6","webpack://crypto-explorer-extension-v2/./src/components/ChartsBlock.tsx","webpack://crypto-explorer-extension-v2/./src/components/ExchangeBlock.tsx","webpack://crypto-explorer-extension-v2/./src/components/ExpandableTextField.tsx","webpack://crypto-explorer-extension-v2/./src/components/HeaderBlock.tsx","webpack://crypto-explorer-extension-v2/./src/components/PriceBar.tsx","webpack://crypto-explorer-extension-v2/./src/components/SocialBlock.tsx","webpack://crypto-explorer-extension-v2/./src/components/TickerBlock.tsx","webpack://crypto-explorer-extension-v2/./src/components/TitleBlock.tsx","webpack://crypto-explorer-extension-v2/./src/components/ValueBlock.tsx","webpack://crypto-explorer-extension-v2/./src/popup/popup.tsx","webpack://crypto-explorer-extension-v2/./src/static/colors.tsx","webpack://crypto-explorer-extension-v2/./src/static/constants.tsx","webpack://crypto-explorer-extension-v2/./src/static/exchangeIcons.tsx","webpack://crypto-explorer-extension-v2/./src/utils/amountFormatter.ts","webpack://crypto-explorer-extension-v2/./src/utils/api.ts","webpack://crypto-explorer-extension-v2/webpack/bootstrap","webpack://crypto-explorer-extension-v2/webpack/runtime/chunk loaded","webpack://crypto-explorer-extension-v2/webpack/runtime/compat get default export","webpack://crypto-explorer-extension-v2/webpack/runtime/define property getters","webpack://crypto-explorer-extension-v2/webpack/runtime/global","webpack://crypto-explorer-extension-v2/webpack/runtime/hasOwnProperty shorthand","webpack://crypto-explorer-extension-v2/webpack/runtime/make namespace object","webpack://crypto-explorer-extension-v2/webpack/runtime/node module decorator","webpack://crypto-explorer-extension-v2/webpack/runtime/publicPath","webpack://crypto-explorer-extension-v2/webpack/runtime/jsonp chunk loading","webpack://crypto-explorer-extension-v2/webpack/runtime/nonce","webpack://crypto-explorer-extension-v2/webpack/before-startup","webpack://crypto-explorer-extension-v2/webpack/startup","webpack://crypto-explorer-extension-v2/webpack/after-startup"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body,\\n#root {\\n    background: radial-gradient(#5565b0, #344183);\\n    width: 330px;\\n    max-height: 600px;\\n    margin: 0;\\n    padding: 0;\\n}\\n\\n::-webkit-scrollbar {\\n    width: 0px;\\n}\\n::-webkit-scrollbar-track {\\n    box-shadow: inset 0 0 5px rgba(255, 255, 255, 0);\\n}\\n::-webkit-scrollbar-thumb {\\n    background: rgba(255, 139, 79, 0);\\n    border-radius: 2px;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/popup/popup.css\"],\"names\":[],\"mappings\":\"AAAA;;IAEI,6CAA6C;IAC7C,YAAY;IACZ,iBAAiB;IACjB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,UAAU;AACd;AACA;IACI,gDAAgD;AACpD;AACA;IACI,iCAAiC;IACjC,kBAAkB;AACtB\",\"sourcesContent\":[\"body,\\n#root {\\n    background: radial-gradient(#5565b0, #344183);\\n    width: 330px;\\n    max-height: 600px;\\n    margin: 0;\\n    padding: 0;\\n}\\n\\n::-webkit-scrollbar {\\n    width: 0px;\\n}\\n::-webkit-scrollbar-track {\\n    box-shadow: inset 0 0 5px rgba(255, 255, 255, 0);\\n}\\n::-webkit-scrollbar-thumb {\\n    background: rgba(255, 139, 79, 0);\\n    border-radius: 2px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./popup.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./popup.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useState } from 'react';\nimport colors from \"../static/colors\";\nimport { ComposedChart, Line, Bar, XAxis, Tooltip, Label, ResponsiveContainer, ReferenceLine } from 'recharts';\nimport { amountFormatter } from \"../utils/amountFormatter\";\nconst ChartsBlock = ({ price30dHistorydata, priceMaxHistorydata }) => {\n    const [chartOption, setChartOption] = useState(1);\n    // 30d HISTORY = 1\n    // max HISTORY = 2\n    const [formattedChartData, setFormattedChartData] = useState([]);\n    const styles = {\n        container: {\n            width: 330,\n            height: 160,\n        },\n        menuOptions: {\n            display: 'flex',\n            justifyContent: 'center',\n        },\n        menuOption: {\n            width: 40,\n            height: 2,\n            marginRight: '9px',\n            cursor: 'pointer',\n            backgroundColor: colors.primary_medium\n        },\n        activeOption: {\n            width: 40,\n            height: 2,\n            marginRight: '9px',\n            cursor: 'pointer',\n            backgroundColor: colors.secondary_medium\n        },\n    };\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.key === 'ArrowRight') {\n                setChartOption(2);\n            }\n            else if (event.key === 'ArrowLeft') {\n                setChartOption(1);\n            }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, []);\n    useEffect(() => {\n        if (chartOption === 2) {\n            setFormattedChartData(priceMaxHistorydata);\n        }\n        else {\n            setFormattedChartData(price30dHistorydata);\n        }\n    }, [chartOption, price30dHistorydata]);\n    const CustomTooltip = props => {\n        var _a;\n        const { active, payload } = props;\n        if (active && payload && payload.length) {\n            const date = (_a = payload[1]) === null || _a === void 0 ? void 0 : _a.payload.date;\n            const formattedDate = date.toLocaleDateString('en-GB', { weekday: 'short', day: '2-digit', month: '2-digit', year: '2-digit' });\n            const price = amountFormatter(payload[1].payload.price);\n            const volume = amountFormatter(payload[1].payload.totalVolume);\n            return (React.createElement(\"div\", { style: {\n                    background: colors.primary_dark,\n                    border: 'none',\n                    borderRadius: '4px',\n                    color: '#fff',\n                    padding: '10px',\n                    fontSize: '14px',\n                } },\n                React.createElement(\"p\", { style: { margin: 0, marginBottom: '6px' } }, `${formattedDate}`),\n                React.createElement(\"p\", { style: { margin: 0, marginBottom: '6px' } }, `$${price}`),\n                React.createElement(\"p\", { style: { margin: 0 } }, `$${volume} / 24h `)));\n        }\n        return null;\n    };\n    const CustomBar = (props) => {\n        const { x, y, width, height, date } = props;\n        let fill = date.getDay() === 1 ? colors.secondary_dark : colors.primary_dark;\n        return (React.createElement(\"rect\", { x: x, y: y, width: width, height: height, fill: fill }));\n    };\n    return (React.createElement(\"div\", { style: styles.container },\n        React.createElement(\"div\", { style: styles.menuOptions },\n            React.createElement(\"div\", { onClick: () => setChartOption(1), style: chartOption === 1 ? styles.activeOption : styles.menuOption }),\n            React.createElement(\"div\", { onClick: () => setChartOption(2), style: chartOption === 2 ? styles.activeOption : styles.menuOption })),\n        React.createElement(ResponsiveContainer, { width: \"100%\", height: \"100%\" },\n            React.createElement(ComposedChart, { data: formattedChartData, margin: { top: 0, left: 0, right: 0, bottom: 0 } },\n                React.createElement(\"defs\", null,\n                    React.createElement(\"filter\", { id: \"shadow\", x: \"-20%\", y: \"-20%\", width: \"140%\", height: \"140%\" },\n                        React.createElement(\"feGaussianBlur\", { in: \"SourceAlpha\", stdDeviation: \"3\" }),\n                        React.createElement(\"feOffset\", { dx: \"2\", dy: \"2\", result: \"offsetblur\" }),\n                        React.createElement(\"feComponentTransfer\", null,\n                            React.createElement(\"feFuncA\", { type: \"linear\", slope: \"0.5\" })),\n                        React.createElement(\"feMerge\", null,\n                            React.createElement(\"feMergeNode\", null),\n                            React.createElement(\"feMergeNode\", { in: \"SourceGraphic\" })))),\n                React.createElement(Tooltip, { content: React.createElement(CustomTooltip, null), cursor: { fill: 'transparent' } }),\n                React.createElement(Line, { type: \"monotone\", strokeWidth: 2, dataKey: \"chartFormatPrice\", stroke: colors.secondary_medium, filter: \"url(#shadow)\", dot: false }),\n                React.createElement(Bar, { dataKey: \"chartFormatVolume\", shape: React.createElement(CustomBar, null) }),\n                React.createElement(ReferenceLine, { y: Math.max(...formattedChartData.map(dateData => dateData.chartFormatPrice)), stroke: colors.primary_dark, \n                    // fill={colors.white_medium}\n                    strokeDasharray: \"0 36 9 0\", style: { display: 'none' } },\n                    React.createElement(Label, { value: `$${amountFormatter(Math.max(...formattedChartData.map(dateData => dateData.price)))}`, position: \"insideTopLeft\", fill: colors.secondary_light })),\n                React.createElement(ReferenceLine, { y: Math.min(...formattedChartData.map(dateData => dateData.chartFormatPrice)), stroke: colors.primary_dark, \n                    // fill={colors.white_medium}\n                    strokeDasharray: \"0 36 9 0\", style: { display: 'none' } },\n                    React.createElement(Label, { value: `$${amountFormatter(Math.min(...formattedChartData.map(dateData => dateData.price)))}`, position: \"insideBottomLeft\", fill: colors.secondary_light })),\n                React.createElement(XAxis, { dataKey: \"date\", tickFormatter: (date) => {\n                        if (chartOption === 1 && date.getDay() === 1) { // Show only Monday dates\n                            return date.toLocaleDateString('en-US', {\n                                day: 'numeric',\n                                month: 'numeric',\n                                timeZone: 'UTC'\n                            }).replace(/\\b0(?=\\d)/g, '');\n                        }\n                        return '';\n                    }, interval: 0, height: 28, axisLine: { stroke: 'none' }, tickLine: { stroke: 'none' }, tick: { fontSize: 12, fill: 'white' }, tickMargin: 2, padding: { left: 9, right: 9 } })))));\n};\nexport default ChartsBlock;\n","import React, { useState, useEffect } from 'react';\nimport colors from \"../static/colors\";\nimport constants from \"../static/constants\";\nimport EXCHANGE_ICONS from \"../static/exchangeIcons\";\nimport { amountFormatter } from \"../utils/amountFormatter\";\n// import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n// import ExpandLessIcon from '@mui/icons-material/ExpandLess';\nconst ExpandMoreIcon = require(\"../static/images/icons/expand-more-icon.png\");\nconst ExpandLessIcon = require(\"../static/images/icons/expand-less-icon.png\");\nconst ExchangeBlock = ({ exchanges }) => {\n    const [isExpanded, setIsExpanded] = useState(false);\n    const toggleExpanded = () => {\n        setIsExpanded(!isExpanded);\n    };\n    useEffect(() => {\n        setIsExpanded(false);\n    }, [exchanges]);\n    const styles = {\n        exchangeWrapper: {\n            boxSizing: \"border-box\",\n            width: 306,\n            height: 40,\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: constants.default_padding,\n            cursor: \"pointer\",\n        },\n        firstExchange: {\n            borderTopLeftRadius: constants.border_radius,\n            borderTopRightRadius: constants.border_radius,\n            borderBottomLeftRadius: !isExpanded && constants.border_radius,\n            borderBottomRightRadius: !isExpanded && constants.border_radius,\n        },\n        lastExchange: {\n            borderBottomLeftRadius: constants.border_radius,\n            borderBottomRightRadius: constants.border_radius,\n        },\n        image: {\n            width: 22,\n            height: 22,\n            borderRadius: constants.border_radius_small,\n        },\n        exchangeName: {\n            width: 116,\n            color: colors.white_medium,\n            fontSize: constants.font_medium,\n            fontWeight: constants.font_weight_medium,\n            paddingLeft: constants.default_padding,\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n        },\n        tradingVolume: {\n            paddingLeft: 6,\n            width: 54,\n            height: constants.font_small,\n            textAlign: \"right\",\n            color: colors.white_medium,\n            fontSize: constants.font_small,\n            fontWeight: constants.font_weight_medium,\n            verticalAlign: 'bottom',\n        },\n        staticText: {\n            paddingLeft: 6,\n            paddingTop: 2,\n            width: 34,\n            display: 'flex',\n            alignItems: 'flex-end',\n            height: constants.font_small,\n            color: colors.accent_medium,\n            fontSize: constants.font_micro,\n            fontWeight: constants.font_weight_medium,\n            verticalAlign: 'bottom',\n        },\n        arrowIcon: {\n            paddingLeft: 6,\n            cursor: \"pointer\",\n        },\n    };\n    function handleOpenTab(link) {\n        chrome.tabs.create({ url: link, active: false });\n    }\n    return (React.createElement(\"div\", { key: Date.now(), style: { background: isExpanded ? 'linear-gradient(to bottom, #2F396D 0%, #3E6CB6 80%)' : colors.primary_dark, borderRadius: constants.border_radius } }, exchanges.map((exchange, index) => (React.createElement(\"div\", { key: exchange.id + exchange.quote, style: Object.assign(Object.assign(Object.assign(Object.assign({}, styles.exchangeWrapper), (index === 0 && styles.firstExchange)), (index === exchanges.length - 1 && styles.lastExchange)), { display: isExpanded || index === 0 ? \"flex\" : \"none\" }) },\n        React.createElement(\"div\", { style: { display: \"flex\", alignItems: \"center\", cursor: \"pointer\" }, onClick: (event) => {\n                if (exchange.exchangeURL) {\n                    event.stopPropagation();\n                    handleOpenTab(exchange.exchangeURL);\n                }\n            } },\n            React.createElement(\"img\", { src: EXCHANGE_ICONS[exchange.id], alt: exchange.exchangeName, style: styles.image }),\n            React.createElement(\"span\", { style: styles.exchangeName }, exchange.exchangeName),\n            React.createElement(\"span\", { style: styles.tradingVolume },\n                \"$\",\n                amountFormatter(exchange.tradingVolume)),\n            !isExpanded ? (React.createElement(\"span\", { style: styles.staticText }, \"/ 24h\")) : (React.createElement(\"span\", { style: styles.staticText }, exchange.quote))),\n        index === 0 && exchanges.length > 1 && (isExpanded ? (React.createElement(\"img\", { src: ExpandLessIcon, alt: \"expand-less-icon\", style: styles.arrowIcon, onClick: toggleExpanded })) : (React.createElement(\"img\", { src: ExpandMoreIcon, alt: \"expand-more-icon\", style: styles.arrowIcon, onClick: toggleExpanded }))))))));\n};\nexport default ExchangeBlock;\n","import React, { useState } from 'react';\nimport colors from \"../static/colors\";\nimport constants from \"../static/constants\";\nconst ExpandableTextField = ({ text }) => {\n    const [expanded, setExpanded] = useState(false);\n    const handleClick = () => {\n        setExpanded(!expanded);\n    };\n    const styles = {\n        expandableField: {\n            boxSizing: \"border-box\",\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            width: 306,\n            minHeight: 37,\n            padding: constants.default_padding,\n            backgroundColor: colors.primary_dark,\n            borderRadius: constants.border_radius,\n        },\n        textFieldContainer: {\n            overflowY: expanded ? 'scroll' : 'hidden',\n            maxHeight: expanded ? 220 : 38,\n            scrollbarWidth: 'none'\n        },\n        textField: {\n            fontSize: constants.font_small,\n            width: 282,\n            color: 'white',\n            display: '-webkit-box',\n            WebkitLineClamp: expanded ? 1000 : 2,\n            WebkitBoxOrient: 'vertical',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            lineHeight: '1.4'\n        },\n        expandBtn: {\n            marginTop: 2,\n            paddingLeft: 0,\n            fontSize: constants.font_small,\n            color: colors.secondary_light,\n            backgroundColor: 'transparent',\n            border: 'none',\n            cursor: 'pointer',\n            outline: 'none',\n            tabIndex: 999,\n        },\n    };\n    const formattedDescription = (text) => {\n        const linkRegex = /<a\\b[^>]*>(.*?)<\\/a>/g;\n        return text.replace(linkRegex, '$1');\n    };\n    return (React.createElement(\"div\", { style: styles.expandableField },\n        React.createElement(\"div\", { style: styles.textFieldContainer },\n            React.createElement(\"div\", { style: styles.textField }, (text === null || text === void 0 ? void 0 : text.length) > 10 ? formattedDescription(text) : 'No description available')),\n        (text === null || text === void 0 ? void 0 : text.length) > 10 &&\n            React.createElement(\"button\", { style: styles.expandBtn, onClick: handleClick }, expanded ? 'Collapse' : 'Expand')));\n};\nexport default ExpandableTextField;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useState, useEffect, useRef } from 'react';\nimport colors from \"../static/colors\";\nimport constants from \"../static/constants\";\nimport { fetchCoinInfo, fetchPriceHistoryData, fetchNameSearch, fetchTrendingCoins } from \"../utils/api\";\nconst menuIcon = require(\"../static/images/icons/menu-icon.png\");\nconst searchIcon = require(\"../static/images/icons/search-icon.png\");\nconst HeaderBlock = ({ mainLogo, setCoinInfo, setPrice30dChartData, setPriceMaxChartData }) => {\n    const searchResultsRef = useRef(null);\n    const [searchInput, setSearchInput] = useState('');\n    const [displayResults, setDisplayResults] = useState({ tokens: [], total: 0 });\n    const [isExpanded, setIsExpanded] = useState(false);\n    const styles = {\n        headerBlock: {\n            display: 'flex',\n            alignItems: 'center',\n        },\n        rectangle: {\n            width: 40,\n            height: 40,\n            borderRadius: constants.border_radius,\n            backgroundColor: colors.primary_dark,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        centeredImage: {\n            width: 20,\n            height: 20,\n        },\n        searchbar: {\n            marginLeft: 12,\n            width: 202,\n            height: 40,\n            borderRadius: constants.border_radius,\n            backgroundColor: colors.primary_dark,\n            display: 'flex',\n            alignItems: 'center',\n            position: 'relative',\n        },\n        searchbarImage: {\n            width: 20,\n            height: 20,\n            marginLeft: 12,\n        },\n        searchInput: {\n            marginLeft: 12,\n            border: 'none',\n            background: 'transparent',\n            color: 'white',\n            outline: 'none',\n            width: '100%',\n        },\n        searchResults: {\n            position: 'absolute',\n            width: 202,\n            marginLeft: 52,\n            zIndex: 99,\n            display: 'flex',\n            flexDirection: 'column',\n            color: '#3381e8',\n            background: 'linear-gradient(to bottom, #2F396D 0%, #3E6CB6 80%)',\n            borderBottomLeftRadius: constants.border_radius,\n            borderBottomRightRadius: constants.border_radius,\n        },\n        coinSearchInfo: {\n            display: 'flex',\n            padding: 9,\n            cursor: \"pointer\",\n        },\n        coinImage: {\n            width: 22,\n            height: 22,\n            borderRadius: constants.border_radius_small,\n        },\n        exchangeName: {\n            paddingLeft: 12,\n            width: 100,\n            color: colors.white_medium,\n            fontSize: constants.font_medium,\n            fontWeight: constants.font_weight_medium,\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n        },\n        marketCapRank: {\n            paddingLeft: 6,\n            width: 40,\n            color: colors.accent_medium,\n            fontSize: constants.font_small,\n            fontWeight: constants.font_weight_medium,\n        },\n        mainLogo: {\n            marginLeft: 12,\n            width: 40,\n            height: 40,\n            borderRadius: constants.border_radius_small,\n        },\n    };\n    // functionality for clicking outside of the search results block\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, []);\n    // Close the expansion if the click is outside of the search results block\n    const handleClickOutside = (event) => {\n        if (searchResultsRef.current && !searchResultsRef.current.contains(event.target)) {\n            setIsExpanded(false);\n        }\n    };\n    // get detailed coin info and trending info on startup\n    useEffect(() => {\n        getTrendingCoins();\n        fetchDetailedInfo('bitcoin');\n    }, []);\n    const getTrendingCoins = () => __awaiter(void 0, void 0, void 0, function* () {\n        try {\n            const trendingCoins = yield fetchTrendingCoins();\n            let searchFormat = { tokens: [], total: 0 };\n            trendingCoins.coins.forEach((coin) => {\n                searchFormat.tokens.push({\n                    id: coin.item.id,\n                    name: coin.item.name,\n                    image: coin.item.small,\n                    marketCapRank: coin.item.market_cap_rank,\n                    nft: false,\n                });\n            });\n            setDisplayResults(searchFormat);\n            return searchFormat;\n        }\n        catch (error) {\n            console.error(\"getTrendingCoins: Error fetching trending coins:\", error);\n        }\n    });\n    const searchCoinNames = () => __awaiter(void 0, void 0, void 0, function* () {\n        try {\n            const searchResults = yield fetchNameSearch(searchInput);\n            if (searchResults.coins.length === 0 && searchResults.nfts.length === 0) {\n                console.log(\"No results\");\n                setDisplayResults({ tokens: [{\n                            id: \"noResult\",\n                            name: \"No results\",\n                            image: \"https://assets.coingecko.com/coins/images/5/small/dogecoin.png?1547792256\",\n                            marketCapRank: '',\n                            nft: false\n                        }], total: 0 });\n                setSearchInput(\"\");\n                return;\n            }\n            let displayNrOfNfts = Math.min(searchResults.nfts.length, 3);\n            let displayNrOfCoins = 11 - displayNrOfNfts;\n            // SET COINS\n            let searchFormat = { tokens: [], total: 0 };\n            searchResults.coins.slice(0, displayNrOfCoins).forEach((coin) => {\n                searchFormat.tokens.push({\n                    id: coin.id,\n                    name: coin.name,\n                    image: coin.large,\n                    marketCapRank: coin.market_cap_rank,\n                    nft: false,\n                });\n            });\n            // SET NFTs\n            searchResults.nfts.slice(0, displayNrOfNfts).forEach((nft) => {\n                searchFormat.tokens.push({\n                    id: nft.id,\n                    name: nft.name,\n                    image: nft.thumb,\n                    marketCapRank: 'NFT',\n                    nft: true,\n                });\n            });\n            searchFormat.total = searchResults.coins.length + searchResults.nfts.length;\n            if (searchFormat.total > 11) {\n                searchFormat.tokens.push({\n                    id: '',\n                    name: `${searchFormat.total - 11} others`,\n                    image: '',\n                    marketCapRank: '',\n                    nft: true,\n                });\n            }\n            console.log(\"searchResults: \", searchResults);\n            setDisplayResults(searchFormat);\n        }\n        catch (error) {\n            console.error(\"handleSearch: Error searching for coins:\", error);\n            setDisplayResults({ tokens: [{\n                        id: \"noResult\",\n                        name: \"No results\",\n                        image: \"https://assets.coingecko.com/coins/images/5/small/dogecoin.png?1547792256\",\n                        marketCapRank: '',\n                        nft: false\n                    }], total: 0 });\n            setSearchInput(\"\");\n        }\n    });\n    function handleSearch(event) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (event.key === \"Enter\") {\n                if (searchInput.length > 0) {\n                    searchCoinNames();\n                    setIsExpanded(true);\n                }\n                else {\n                    setIsExpanded(false);\n                    getTrendingCoins();\n                }\n            }\n        });\n    }\n    function handleFocus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            setIsExpanded(true);\n        });\n    }\n    const fetchDetailedInfo = (coinId) => __awaiter(void 0, void 0, void 0, function* () {\n        try {\n            const [coinSearchResult, price30dHistoryData, priceMaxHistoryData] = yield Promise.all([\n                fetchCoinInfo(coinId),\n                fetchPriceHistoryData(coinId, 'usd', '30'),\n                fetchPriceHistoryData(coinId, 'usd', 'max'),\n            ]);\n            if (!coinSearchResult) {\n                console.log(`No results for coinSearchResult ${coinId}`);\n                return;\n            }\n            if (!price30dHistoryData) {\n                console.log(`No results for price30dHistoryData ${coinId}`);\n                return;\n            }\n            if (!priceMaxHistoryData) {\n                console.log(`No results for priceMaxHistoryData ${coinId}`);\n                return;\n            }\n            console.log(\"coinSearchResult: \", coinSearchResult);\n            setCoinInfo(coinSearchResult);\n            setPrice30dChartData(FormatChartData(price30dHistoryData));\n            setPriceMaxChartData(FormatChartData(priceMaxHistoryData));\n        }\n        catch (error) {\n            console.error(`fetchDetailedInfo: Error searching for coin: ${coinId}`, error);\n        }\n    });\n    const FormatChartData = (priceHistoryData) => {\n        // add all previous day-candle close data\n        let formattedChartData = [];\n        for (let i = 0; i < priceHistoryData.prices.length - 1; i++) {\n            const unixPriceArray = priceHistoryData.prices[i];\n            const unixVolumeArray = priceHistoryData.total_volumes[i];\n            const date = new Date(unixPriceArray[0] - 86400000);\n            formattedChartData.push({\n                date: date,\n                price: unixPriceArray[1],\n                totalVolume: unixVolumeArray[1],\n            });\n        }\n        // add today's current volume/price\n        const unixPriceArray = priceHistoryData.prices[formattedChartData.length];\n        const unixVolumeArray = priceHistoryData.total_volumes[formattedChartData.length];\n        const date = new Date(unixPriceArray[0]);\n        formattedChartData.push({\n            date: date,\n            price: unixPriceArray[1],\n            totalVolume: unixVolumeArray[1],\n        });\n        // Calculate the min and maximum price and volume value\n        let minPrice = Math.min(...formattedChartData.map(dateData => dateData.price));\n        let maxPrice = Math.max(...formattedChartData.map(dateData => dateData.price));\n        let maxVolume = Math.max(...formattedChartData.map(dateData => dateData.totalVolume));\n        // let maxFormattedPrice = (maxPrice - minPrice) / (maxPrice - minPrice) * 0.5\n        let maxFormattedPrice = 0.5;\n        const barHeightMultiplier = maxVolume / maxFormattedPrice;\n        // Add extraKey to each object for chart format\n        formattedChartData = formattedChartData.map(dateData => (Object.assign(Object.assign({}, dateData), { chartFormatPrice: (dateData.price - minPrice) / (maxPrice - minPrice) * 0.8 + 0.3, chartFormatVolume: dateData.totalVolume / barHeightMultiplier })));\n        return formattedChartData;\n    };\n    const handleCoinOptionClick = (coinId) => __awaiter(void 0, void 0, void 0, function* () {\n        fetchDetailedInfo(coinId);\n        setIsExpanded(false);\n    });\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { style: styles.headerBlock },\n            React.createElement(\"div\", { style: styles.rectangle },\n                React.createElement(\"img\", { style: styles.centeredImage, src: menuIcon, alt: \"Centered\" })),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.searchbar), { borderBottomLeftRadius: isExpanded ? 0 : constants.border_radius, borderBottomRightRadius: isExpanded ? 0 : constants.border_radius }) },\n                React.createElement(\"img\", { style: styles.searchbarImage, src: searchIcon, alt: \"Search\" }),\n                React.createElement(\"input\", { type: \"text\", style: styles.searchInput, onChange: (e => setSearchInput(e.target.value)), onKeyDown: handleSearch, onClick: () => setSearchInput(\"\"), onFocus: handleFocus, value: searchInput })),\n            React.createElement(\"img\", { style: styles.mainLogo, src: mainLogo, alt: \"Main Logo\" })),\n        React.createElement(\"div\", { style: styles.searchResults, ref: searchResultsRef }, isExpanded && (displayResults === null || displayResults === void 0 ? void 0 : displayResults.tokens.length) > 0 &&\n            (displayResults === null || displayResults === void 0 ? void 0 : displayResults.tokens.slice(0, 12).map((tokenInfo, index) => React.createElement(\"div\", { key: tokenInfo.id + index, style: styles.coinSearchInfo, tabIndex: index, onClick: () => handleCoinOptionClick(tokenInfo.id), onKeyDown: (event) => {\n                    if (event.key === 'Enter') {\n                        handleCoinOptionClick(tokenInfo.id);\n                    }\n                } },\n                tokenInfo.image ?\n                    React.createElement(\"img\", { src: tokenInfo.image, alt: tokenInfo.name, style: styles.coinImage }) :\n                    React.createElement(\"div\", { style: styles.coinImage }),\n                React.createElement(\"span\", { style: styles.exchangeName }, tokenInfo.name),\n                tokenInfo.marketCapRank &&\n                    (tokenInfo.marketCapRank === 'NFT' ? (React.createElement(\"span\", { style: styles.marketCapRank }, tokenInfo.marketCapRank))\n                        :\n                            (React.createElement(\"span\", { style: styles.marketCapRank },\n                                \"#\",\n                                tokenInfo.marketCapRank)))))))));\n};\nexport default HeaderBlock;\n","import React from 'react';\nimport colors from '../static/colors';\nimport constants from \"../static/constants\";\nimport { amountFormatter } from \"../utils/amountFormatter\";\nconst PriceBar = ({ allTimeLow, allTimeHigh, price }) => {\n    const percentage = ((price - allTimeLow) / (allTimeHigh - allTimeLow)) * 100;\n    const gradientWidth = Math.ceil(306 * (percentage / 100));\n    const styles = {\n        container: {\n            width: '306px',\n            height: '40px',\n            backgroundColor: colors.primary_dark,\n            position: 'relative',\n            borderRadius: constants.border_radius,\n            overflow: 'hidden',\n        },\n        gradient: {\n            width: `${gradientWidth}px`,\n            height: '40px',\n            position: 'absolute',\n            borderRadius: constants.border_radius,\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            background: `linear-gradient(to right, ${colors.primary_dark}, rgba(220, 220, 256, 0.30)`,\n        },\n        allTimeLow: {\n            position: 'absolute',\n            left: constants.default_padding,\n            top: '50%',\n            transform: 'translateY(-50%)',\n            fontSize: constants.font_small,\n            color: colors.red_medium,\n            // fontFamily: 'Open Sans',\n            fontWeight: constants.font_weight_large,\n        },\n        price: {\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            fontSize: constants.font_large,\n            color: colors.white_medium,\n            // fontFamily: 'Open Sans',\n            fontWeight: constants.font_weight_large,\n        },\n        allTimeHigh: {\n            position: 'absolute',\n            right: constants.default_padding,\n            top: '50%',\n            transform: 'translateY(-50%)',\n            fontSize: constants.font_small,\n            color: colors.green_medium,\n            // fontFamily: 'Open Sans',\n            fontWeight: constants.font_weight_large,\n        },\n    };\n    return (React.createElement(\"div\", { style: styles.container },\n        React.createElement(\"div\", { style: styles.gradient }),\n        React.createElement(\"span\", { style: styles.allTimeLow },\n            \"$\",\n            amountFormatter(allTimeLow)),\n        React.createElement(\"span\", { style: styles.price },\n            \"$\",\n            amountFormatter(price)),\n        React.createElement(\"span\", { style: styles.allTimeHigh },\n            \"$\",\n            amountFormatter(allTimeHigh))));\n};\nexport default PriceBar;\n","import React from 'react';\nimport colors from '../static/colors';\nimport constants from \"../static/constants\";\nimport { numberFormatter } from \"../utils/amountFormatter\";\nconst SocialBlock = ({ image, mainValue, link }) => {\n    const styles = {\n        container: {\n            width: 38,\n            height: 51,\n            borderTopLeftRadius: 34,\n            borderTopRightRadius: 34,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            backgroundColor: colors.primary_dark,\n            cursor: 'pointer',\n        },\n        image: {\n            width: 22,\n            height: 22,\n            borderRadius: '50%',\n            marginTop: 8,\n        },\n        mainValue: {\n            fontSize: constants.font_micro,\n            color: colors.white_medium,\n            height: 9,\n            width: 32,\n            marginBottom: 6,\n            padding: 0,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n        },\n    };\n    function handleOpenTab() {\n        chrome.tabs.create({ url: link, active: false });\n    }\n    return (React.createElement(\"div\", { style: styles.container, onClick: handleOpenTab },\n        React.createElement(\"img\", { src: image, alt: \"Social image\", style: styles.image }),\n        React.createElement(\"span\", { style: styles.mainValue }, numberFormatter(mainValue))));\n};\nexport default SocialBlock;\n","import React from 'react';\nconst TickerBlock = ({ ticker }) => {\n    const styles = {\n        container: {\n            height: 65,\n            width: 200,\n            position: 'absolute',\n            top: '100px',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            textAlign: 'center',\n            fontFamily: 'Open Sans, sans-serif',\n            fontSize: 64,\n            color: '#0000001A',\n        },\n    };\n    return (React.createElement(\"div\", { style: styles.container }, ticker.toUpperCase()));\n};\nexport default TickerBlock;\n","import React from 'react';\nimport colors from \"../static/colors\";\nimport constants from \"../static/constants\";\nconst TitleBlock = ({ title }) => {\n    const styles = {\n        container: {\n            height: constants.font_large,\n            paddingBottom: constants.default_padding,\n            textAlign: 'center',\n            fontFamily: 'Open Sans, sans-serif',\n            fontSize: constants.font_large,\n            fontWeight: constants.font_weight_large,\n            color: colors.white_medium\n        },\n    };\n    return (React.createElement(\"div\", { style: styles.container }, title));\n};\nexport default TitleBlock;\n","import React from 'react';\nimport colors from \"../static/colors\";\nimport constants from \"../static/constants\";\nimport { amountFormatter } from \"../utils/amountFormatter\";\nconst ValueBlock = ({ title, mainValue, mainPreFix, secondaryValue, secondaryPreFix, secondaryFormatter = true }) => {\n    const styles = {\n        rectangle: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            width: 144,\n            height: 48,\n            backgroundColor: colors.primary_dark,\n            borderRadius: constants.border_radius,\n        },\n        title: {\n            fontSize: 14,\n            height: 16,\n            fontWeight: constants.font_weight_medium,\n            color: colors.secondary_light,\n            marginTop: 4,\n            marginBottom: 0\n        },\n        values: {\n            display: 'flex',\n            alignItems: 'flex-end',\n            height: 24,\n            marginBottom: 6\n        },\n        mainValue: {\n            fontSize: constants.font_medium,\n            fontWeight: constants.font_weight_medium,\n            color: colors.white_medium,\n        },\n        secondaryValue: {\n            fontSize: constants.font_small,\n            fontWeight: constants.font_weight_medium,\n            color: colors.accent_medium,\n            marginLeft: 4,\n        },\n    };\n    return (React.createElement(\"div\", { style: styles.rectangle },\n        React.createElement(\"div\", { style: styles.title }, title),\n        React.createElement(\"div\", { style: styles.values },\n            React.createElement(\"span\", { style: styles.mainValue },\n                mainPreFix,\n                mainValue ? amountFormatter(mainValue) : ' -'),\n            React.createElement(\"span\", { style: styles.secondaryValue },\n                secondaryPreFix,\n                !secondaryValue ? ' -' : secondaryFormatter ? amountFormatter(secondaryValue) : secondaryValue))));\n};\nexport default ValueBlock;\n","import React, { useState } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './popup.css';\nimport TitleBlock from '../components/TitleBlock';\nimport PriceBar from '../components/PriceBar';\nimport ValueBlock from '../components/ValueBlock';\nimport ExpandableTextField from \"../components/ExpandableTextField\";\nimport SocialBlock from \"../components/SocialBlock\";\nimport ExchangeBlock from \"../components/ExchangeBlock\";\nimport HeaderBlock from \"../components/HeaderBlock\";\nimport ChartsBlock from \"../components/ChartsBlock\";\nimport TickerBlock from \"../components/TickerBlock\";\n// import {fetchExchangesList} from \"../utils/api\"; used for fetching all exchange icons\nconst bitcoinIcon = require(\"../static/images/icons/bitcoin-icon.png\");\nconst blockchainIcon = require(\"../static/images/icons/blockchain-icon.png\");\nconst coingeckoIcon = require(\"../static/images/icons/coingecko-icon.png\");\nconst redditIcon = require(\"../static/images/icons/reddit-icon.png\");\nconst telegramIcon = require(\"../static/images/icons/telegram-icon.png\");\nconst twitterIcon = require(\"../static/images/icons/twitter-icon.png\");\nconst websiteIcon = require(\"../static/images/icons/website-icon.png\");\n// const discordIcon = require( \"../static/images/icons/discord-icon.png\")\nconst styles = {\n    topContainer: {\n        padding: '12px',\n    },\n    bottomContainer: {\n        paddingLeft: '12px',\n        paddingRight: '12px',\n    },\n    dataBlocks: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    socialBlocks: {\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '9px',\n    },\n    bottomMargin: {\n        marginBottom: '12px',\n    },\n};\nconst App = () => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n    const [coinInfo, setCoinInfo] = useState();\n    const [price30dChartData, setPrice30dChartData] = useState();\n    const [priceMaxChartData, setPriceMaxChartData] = useState();\n    // todo bring formatExchangeInfo function to exchangeBlock component\n    // todo add onchain txs chart\n    // todo improve rendering efficiency\n    // Avoid Complex Calculations in the Render Method: Move the calculation of minPrice, maxPrice, maxVolume, maxFormattedPrice, barHeightMultiplier and the map operation to format the chart data outside the Format30dChartData and FormatMaxChartData functions. Store these values in state variables and update them only when price30dHistorydata and priceMaxHistorydata change.\n    //\n    // Limit the Number of Re-Renders: Instead of using the useState hook for chartOption and listening for changes with useEffect, consider using the useMemo hook. This way, you only calculate the formatted chart data when chartOption, price30dHistorydata, and priceMaxHistorydata change.\n    //\n    // Memoize Components: React creates a new function instance for every render when you define CustomTooltip and CustomBar within the ChartsBlock component. To prevent unnecessary re-renders and optimize performance, memoize these components with React.memo.\n    //\n    // Efficient Event Listening: Instead of attaching and removing event listeners on every render, use the useEffect hook to attach the event listener when the component mounts and remove it when the component unmounts.\n    //\n    // Use React.PureComponent or React.memo for Child Components: If you have child components inside the ChartsBlock that receive props, and you want to prevent unnecessary renders, consider converting these child components to PureComponent or wrapping them with React.memo.\n    //\n    // Debounce or Throttle Event Handlers: If you're dealing with events that fire rapidly (like scrolling or keyboard events), you might want to limit how often your component re-renders in response to those events.\n    // drag and zoom chart functionality\n    // join a group via name/ code?\n    // check watchlist etc.\n    // navigation with arrow keys? left right key to switch between trending pages\n    const formatExchangeInfo = (tickers) => {\n        if (!tickers)\n            return [];\n        const sortedTickers = tickers.sort((a, b) => b.converted_volume.usd - a.converted_volume.usd);\n        const top10Tickers = sortedTickers.slice(0, 10); // by volume\n        return top10Tickers.map(obj => {\n            let quote = String(obj.target);\n            if (quote.length > 5) {\n                quote = obj.target_coin_id.toUpperCase();\n            }\n            return {\n                image: redditIcon,\n                id: obj.market.identifier,\n                exchangeName: obj.market.name,\n                tradingVolume: obj.converted_volume.usd,\n                quote,\n                exchangeURL: obj.trade_url\n            };\n        });\n    };\n    console.log(\"coinInfo1: \", coinInfo);\n    if (coinInfo === null || coinInfo === void 0 ? void 0 : coinInfo.tickers)\n        formatExchangeInfo(coinInfo.tickers);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { style: styles.topContainer },\n            React.createElement(HeaderBlock, { mainLogo: ((_a = coinInfo === null || coinInfo === void 0 ? void 0 : coinInfo.image) === null || _a === void 0 ? void 0 : _a.small) ? coinInfo.image.small : bitcoinIcon, setCoinInfo: setCoinInfo, setPrice30dChartData: setPrice30dChartData, setPriceMaxChartData: setPriceMaxChartData })),\n        (coinInfo === null || coinInfo === void 0 ? void 0 : coinInfo.name) &&\n            React.createElement(React.Fragment, null,\n                React.createElement(TitleBlock, { title: coinInfo.name }),\n                React.createElement(TickerBlock, { ticker: coinInfo.symbol })),\n        (price30dChartData === null || price30dChartData === void 0 ? void 0 : price30dChartData.length) > 0 &&\n            React.createElement(ChartsBlock, { price30dHistorydata: price30dChartData, priceMaxHistorydata: priceMaxChartData }),\n        React.createElement(\"div\", { style: styles.bottomContainer }, (coinInfo === null || coinInfo === void 0 ? void 0 : coinInfo.name) &&\n            React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { style: styles.bottomMargin },\n                    React.createElement(PriceBar, { allTimeLow: (_c = (_b = coinInfo.market_data) === null || _b === void 0 ? void 0 : _b.atl) === null || _c === void 0 ? void 0 : _c.usd, allTimeHigh: (_e = (_d = coinInfo.market_data) === null || _d === void 0 ? void 0 : _d.ath) === null || _e === void 0 ? void 0 : _e.usd, price: (_g = (_f = coinInfo.market_data) === null || _f === void 0 ? void 0 : _f.current_price) === null || _g === void 0 ? void 0 : _g.usd })),\n                React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.dataBlocks), styles.bottomMargin) },\n                    React.createElement(ValueBlock, { title: \"Circ. Supply\", mainValue: (_h = coinInfo.market_data) === null || _h === void 0 ? void 0 : _h.circulating_supply, secondaryValue: (_j = coinInfo.market_data) === null || _j === void 0 ? void 0 : _j.total_supply, secondaryPreFix: '/ ' }),\n                    React.createElement(ValueBlock, { title: \"Market Cap\", mainValue: (_k = coinInfo.market_data) === null || _k === void 0 ? void 0 : _k.market_cap.usd, mainPreFix: '$', secondaryValue: coinInfo.market_cap_rank, secondaryPreFix: '#', secondaryFormatter: false })),\n                React.createElement(\"div\", { style: styles.bottomMargin },\n                    React.createElement(ExchangeBlock, { exchanges: formatExchangeInfo(coinInfo.tickers) })),\n                React.createElement(\"div\", { style: styles.bottomMargin },\n                    React.createElement(ExpandableTextField, { text: (_l = coinInfo.description) === null || _l === void 0 ? void 0 : _l.en })),\n                React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.socialBlocks), styles.bottomMargin) },\n                    React.createElement(SocialBlock, { image: websiteIcon, link: (_m = coinInfo.links) === null || _m === void 0 ? void 0 : _m.homepage[0] }),\n                    React.createElement(SocialBlock, { image: blockchainIcon, link: (_o = coinInfo.links) === null || _o === void 0 ? void 0 : _o.blockchain_site[0] }),\n                    React.createElement(SocialBlock, { image: coingeckoIcon, mainValue: coinInfo.watchlist_portfolio_users, link: `https://www.coingecko.com/en/coins/${coinInfo.id}` }),\n                    React.createElement(SocialBlock, { image: twitterIcon, mainValue: (_p = coinInfo.community_data) === null || _p === void 0 ? void 0 : _p.twitter_followers, link: `https://twitter.com/${coinInfo.links.twitter_screen_name}` }),\n                    React.createElement(SocialBlock, { image: redditIcon, mainValue: (_q = coinInfo.community_data) === null || _q === void 0 ? void 0 : _q.reddit_subscribers, link: (_r = coinInfo.links) === null || _r === void 0 ? void 0 : _r.subreddit_url }),\n                    React.createElement(SocialBlock, { image: telegramIcon, mainValue: (_s = coinInfo.community_data) === null || _s === void 0 ? void 0 : _s.telegram_channel_user_count, link: `https://t.me/${coinInfo.links.telegram_channel_identifier}` }))))));\n};\nconst root = document.createElement('div');\ndocument.body.appendChild(root);\ncreateRoot(root).render(React.createElement(App, null));\n","const colors = {\n    primary_medium: '#34495e',\n    primary_dark: '#2F396D',\n    secondary_light: '#8F95EC',\n    secondary_medium: '#6778CE',\n    secondary_dark: '#5b61c2',\n    accent_medium: '#FFFFFF80',\n    red_medium: '#FD8E8E',\n    green_medium: '#88EE58',\n    white_medium: '#F5F5F5',\n};\nexport default colors;\n","const constants = {\n    border_radius: 12,\n    border_radius_small: 6,\n    default_padding: 12,\n    font_large: 22,\n    font_medium: 16,\n    font_small: 14,\n    font_micro: 12,\n    font_nano: 10,\n    font_weight_large: 600,\n    font_weight_medium: 500,\n};\nexport default constants;\n","const EXCHANGE_ICONS = {\n    \"binance\": \"https://assets.coingecko.com/markets/images/52/small/binance.jpg?1519353250\",\n    \"gdax\": \"https://assets.coingecko.com/markets/images/23/small/Coinbase_Coin_Primary.png?1621471875\",\n    \"bybit_spot\": \"https://assets.coingecko.com/markets/images/698/small/bybit_spot.png?1629971794\",\n    \"okex\": \"https://assets.coingecko.com/markets/images/96/small/WeChat_Image_20220117220452.png?1642428377\",\n    \"huobi\": \"https://assets.coingecko.com/markets/images/25/small/logo_V_colour_black.png?1669177364\",\n    \"kucoin\": \"https://assets.coingecko.com/markets/images/61/small/kucoin.png?1640584259\",\n    \"crypto_com\": \"https://assets.coingecko.com/markets/images/589/small/h2oMjPp6_400x400.jpg?1669699705\",\n    \"binance_us\": \"https://assets.coingecko.com/markets/images/469/small/Binance.png?1568875842\",\n    \"bitfinex\": \"https://assets.coingecko.com/markets/images/4/small/BItfinex.png?1615895883\",\n    \"gate\": \"https://assets.coingecko.com/markets/images/60/small/gate_io_logo1.jpg?1654596784\",\n    \"bitget\": \"https://assets.coingecko.com/markets/images/540/small/Bitget_new_logo_2.png?1630049618\",\n    \"mxc\": \"https://assets.coingecko.com/markets/images/409/small/MEXC_logo_square.jpeg?1673000123\",\n    \"kraken\": \"https://assets.coingecko.com/markets/images/29/small/kraken.jpg?1584251255\",\n    \"bingx\": \"https://assets.coingecko.com/markets/images/812/small/YtFwQwJr_400x400.jpg?1646056092\",\n    \"phemex\": \"https://assets.coingecko.com/markets/images/564/small/Phemex_logo_4.png?1641357471\",\n    \"gemini\": \"https://assets.coingecko.com/markets/images/50/small/gemini.png?1605704107\",\n    \"okcoin\": \"https://assets.coingecko.com/markets/images/415/small/okcoin_Logomark_SatoshiBlack.png?1619574335\",\n    \"whitebit\": \"https://assets.coingecko.com/markets/images/418/small/whitebit_final.png?1667923522\",\n    \"upbit\": \"https://assets.coingecko.com/markets/images/117/small/upbit.png?1520388800\",\n    \"bkex\": \"https://assets.coingecko.com/markets/images/293/small/New_BKEX_logo.png?1646724631\",\n    \"digifinex\": \"https://assets.coingecko.com/markets/images/225/small/DF_logo.png?1594264355\",\n    \"bitmart\": \"https://assets.coingecko.com/markets/images/239/small/Bitmart.png?1628066397\",\n    \"btcex\": \"https://assets.coingecko.com/markets/images/753/small/C8tiQdwL_400x400.jpg?1641348961\",\n    \"coinsbit\": \"https://assets.coingecko.com/markets/images/267/small/Coinsbit.png?1605153697\",\n    \"btse\": \"https://assets.coingecko.com/markets/images/464/small/BTSE.jpg?1568012415\",\n    \"tidex\": \"https://assets.coingecko.com/markets/images/43/small/favicon.png?1651817092\",\n    \"bitrue\": \"https://assets.coingecko.com/markets/images/254/small/unnamed_%281%29.png?1656295820\",\n    \"hotbit\": \"https://assets.coingecko.com/markets/images/201/small/hotbit.jpg?1531043195\",\n    \"exmo\": \"https://assets.coingecko.com/markets/images/59/small/tt_ava.jpg?1669360697\",\n    \"coinex\": \"https://assets.coingecko.com/markets/images/135/small/coinex.jpg?1527737297\",\n    \"bitso\": \"https://assets.coingecko.com/markets/images/8/small/Bitso-icon-dark.png?1581909156\",\n    \"bitkub\": \"https://assets.coingecko.com/markets/images/249/small/bitkub.png?1537180687\",\n    \"bitbank\": \"https://assets.coingecko.com/markets/images/122/small/bitbank.jpg?1521186278\",\n    \"max_maicoin\": \"https://assets.coingecko.com/markets/images/218/small/max.jpg?1533888641\",\n    \"wootrade\": \"https://assets.coingecko.com/markets/images/683/small/woo.png?1677468948\",\n    \"indodax\": \"https://assets.coingecko.com/markets/images/3/small/logogram-Indodax-new-_JPG_format.jpg?1580974378\",\n    \"bittrex\": \"https://assets.coingecko.com/markets/images/10/small/BG-color-250x250_icon.png?1596167574\",\n    \"blockchain_com\": \"https://assets.coingecko.com/markets/images/613/small/unnamedddd.png?1610503741\",\n    \"coinspro\": \"https://assets.coingecko.com/markets/images/999/small/coinspro.png?1668488887\",\n    \"nice_hash\": \"https://assets.coingecko.com/markets/images/546/small/logo_small_light.png?1637836622\",\n    \"lbank\": \"https://assets.coingecko.com/markets/images/118/small/LBank_logo.png?1666234663\",\n    \"p2pb2b\": \"https://assets.coingecko.com/markets/images/251/small/ow0xng56_400x400.jpeg?1664939403\",\n    \"bithumb\": \"https://assets.coingecko.com/markets/images/6/small/bithumb_BI.png?1573104549\",\n    \"bigone\": \"https://assets.coingecko.com/markets/images/100/small/qcFFufEY_400x400.jpg?1561103345\",\n    \"coinstore\": \"https://assets.coingecko.com/markets/images/747/small/coinstore.jpeg?1639530357\",\n    \"paribu\": \"https://assets.coingecko.com/markets/images/136/small/paribu.jpg?1527734779\",\n    \"bitmax\": \"https://assets.coingecko.com/markets/images/277/small/%E5%8E%9F%E8%89%B2.png?1650557355\",\n    \"poloniex\": \"https://assets.coingecko.com/markets/images/37/small/poloniex.png?1663310089\",\n    \"bitstamp\": \"https://assets.coingecko.com/markets/images/9/small/bitstamp.jpg?1519627979\",\n    \"dextrade\": \"https://assets.coingecko.com/markets/images/380/small/Dex-Trade_logo_new.png?1599629803\",\n    \"btcturk\": \"https://assets.coingecko.com/markets/images/223/small/BTCTurk-exchange.jpg?1536726120\",\n    \"qmall\": \"https://assets.coingecko.com/markets/images/1108/small/qmall.jpeg?1680079189\",\n    \"bitflyer\": \"https://assets.coingecko.com/markets/images/5/small/bitFlyer-logo.png?1643256033\",\n    \"cryptology\": \"https://assets.coingecko.com/markets/images/287/small/logo-symbol.png?1669975181\",\n    \"latoken\": \"https://assets.coingecko.com/markets/images/124/small/LA_token.png?1605773251\",\n    \"kanga\": \"https://assets.coingecko.com/markets/images/852/small/KaNGa_logo.png?1681790128\",\n    \"luno\": \"https://assets.coingecko.com/markets/images/33/small/luno.jpg?1519996997\",\n    \"finexbox\": \"https://assets.coingecko.com/markets/images/318/small/finexbox20190920.jpg?1568959220\",\n    \"bitopro\": \"https://assets.coingecko.com/markets/images/358/small/bitopro_coingecko_250x250_%281%29.png?1575884378\",\n    \"cex\": \"https://assets.coingecko.com/markets/images/56/small/main-icon.png?1617267530\",\n    \"korbit\": \"https://assets.coingecko.com/markets/images/28/small/korbit-logo.png?1584091827\",\n    \"c_patex\": \"https://assets.coingecko.com/markets/images/246/small/Exchange.jpg?1681192003\",\n    \"bitpanda\": \"https://assets.coingecko.com/markets/images/474/small/appicon-ios-pro.png?1622626638\",\n    \"coin_metro\": \"https://assets.coingecko.com/markets/images/386/small/Coinmetro_Exchange_Logo_%282%29.png?1646280101\",\n    \"delta_spot\": \"https://assets.coingecko.com/markets/images/642/small/delta_spot.jpg?1617283005\",\n    \"kuna\": \"https://assets.coingecko.com/markets/images/97/small/kuna_exchange.png?1545126178\",\n    \"bitmex_spot\": \"https://assets.coingecko.com/markets/images/866/small/bitmex.jpeg?1652794708\",\n    \"xt\": \"https://assets.coingecko.com/markets/images/404/small/logo400x400.png?1575881839\",\n    \"bitforex\": \"https://assets.coingecko.com/markets/images/214/small/BitForex-Logo.png?1573808227\",\n    \"cointr\": \"https://assets.coingecko.com/markets/images/1028/small/cointr.png?1673681204\",\n    \"pionex\": \"https://assets.coingecko.com/markets/images/1026/small/pionex.png?1673508138\",\n    \"uniswap_v3_arbitrum\": \"https://assets.coingecko.com/markets/images/702/small/uniswap-v3.png?1631616149\",\n    \"uniswap_v2\": \"https://assets.coingecko.com/markets/images/535/small/256x256_Black-1.png?1590893262\",\n    \"pancakeswap_new\": \"https://assets.coingecko.com/markets/images/687/small/pancakeswap.jpeg?1626060212\",\n    \"difx\": \"https://assets.coingecko.com/markets/images/1138/small/difx.png?1683531591\",\n    \"pancakeswap-v3-bsc\": \"https://assets.coingecko.com/markets/images/1111/small/pancakeswap.jpeg?1680396625\",\n    \"uniswap_v3_polygon_pos\": \"https://assets.coingecko.com/markets/images/752/small/uniswap-polygon.png?1640329417\",\n    \"coindcx\": \"https://assets.coingecko.com/markets/images/520/small/coindcx.png?1585318880\",\n    \"bitvavo\": \"https://assets.coingecko.com/markets/images/714/small/bitvavo-mark-square-black.png?1633688872\",\n    \"bitcoin_com\": \"https://assets.coingecko.com/markets/images/467/small/fmfw.png?1635491491\",\n    \"pointpay\": \"https://assets.coingecko.com/markets/images/1060/small/pointpay.png?1676882506\",\n    \"quickswap_v3\": \"https://assets.coingecko.com/markets/images/982/small/quick.png?1676951259\",\n    \"traderjoe-v2-1-avalanche\": \"https://assets.coingecko.com/markets/images/1124/small/traderjoe.png?1682383556\",\n    \"uniswap_v3_optimism\": \"https://assets.coingecko.com/markets/images/725/small/uniswap-v3.png?1634896204\",\n    \"orca\": \"https://assets.coingecko.com/markets/images/691/small/orca.png?1628047248\",\n    \"gmo_japan\": \"https://assets.coingecko.com/markets/images/430/small/gmo_z_com.png?1561112572\",\n    \"independent_reserve\": \"https://assets.coingecko.com/markets/images/389/small/x_V5Jquo_400x400.png?1556071437\",\n    \"syncswap\": \"https://assets.coingecko.com/markets/images/1113/small/kg4-p_V7_400x400.jpg?1680752024\",\n    \"dodo_bsc\": \"https://assets.coingecko.com/markets/images/640/small/41tgsq69_400x400.png?1618372654\",\n    \"velodrome\": \"https://assets.coingecko.com/markets/images/933/small/velodrome-finance.png?1660261754\",\n    \"bitazza\": \"https://assets.coingecko.com/markets/images/837/small/btzlogo200x200_darkgreen.png?1648702264\",\n    \"canto_dex\": \"https://assets.coingecko.com/markets/images/943/small/canto.jpeg?1661216713\",\n    \"valr\": \"https://assets.coingecko.com/markets/images/1036/small/valr.png?1674711237\",\n    \"btcmarkets\": \"https://assets.coingecko.com/markets/images/237/small/BTCMarkets_logo2.png?1677732205\",\n    \"nominex\": \"https://assets.coingecko.com/markets/images/530/small/logo-200x200.png?1587543672\",\n    \"camelot\": \"https://assets.coingecko.com/markets/images/1007/small/vj5DIMhP_400x400.jpeg?1670561015\",\n    \"osmosis\": \"https://assets.coingecko.com/markets/images/684/small/osmosis-dex.jpeg?1624850295\",\n    \"klayswap\": \"https://assets.coingecko.com/markets/images/1008/small/klayswap.jpeg?1670810834\",\n    \"lcx\": \"https://assets.coingecko.com/markets/images/638/small/LCX.jpg?1616748175\",\n    \"pancakeswap_stableswap\": \"https://assets.coingecko.com/markets/images/1035/small/pancakeswap.jpeg?1674702488\",\n    \"coinjar\": \"https://assets.coingecko.com/markets/images/176/small/Logomark_2022200h_thumb.png?1657688357\",\n    \"wazirx\": \"https://assets.coingecko.com/markets/images/274/small/wazirx.jpg?1540450020\",\n    \"zaif\": \"https://assets.coingecko.com/markets/images/99/small/zaif.png?1519627467\",\n    \"bitlo\": \"https://assets.coingecko.com/markets/images/968/small/bitlo-logo-b.png?1677732049\",\n    \"katana\": \"https://assets.coingecko.com/markets/images/731/small/ronin-katana.png?1636437019\",\n    \"bitbuy\": \"https://assets.coingecko.com/markets/images/858/small/OQiasZUI_400x400.jpeg?1651835216\",\n    \"coinlist\": \"https://assets.coingecko.com/markets/images/587/small/black.png?1683178461\",\n    \"klever_exchange\": \"https://assets.coingecko.com/markets/images/984/small/BitcoinMe%283%29.png?1683595940\",\n    \"nash\": \"https://assets.coingecko.com/markets/images/472/small/Nash-token_icon.png?1569458675\",\n    \"flybit\": \"https://assets.coingecko.com/markets/images/655/small/flybit_logo_%EA%B0%80%EB%A1%9C%ED%98%95.png?1619148627\",\n    \"uniswap_v3\": \"https://assets.coingecko.com/markets/images/665/small/uniswap-v3.png?1620241698\",\n    \"toobit\": \"https://assets.coingecko.com/markets/images/1139/small/35W1E9Zw_400x400.jpg?1683613350\",\n    \"deepcoin\": \"https://assets.coingecko.com/markets/images/1005/small/%E2%98%85%E6%96%B9-%E9%80%8F%E6%98%8E7.png?1678175660\",\n    \"probit\": \"https://assets.coingecko.com/markets/images/370/small/probit.png?1594886584\",\n    \"coinone\": \"https://assets.coingecko.com/markets/images/20/small/coinone_circle_500x500.png?1606460853\",\n    \"fameex\": \"https://assets.coingecko.com/markets/images/1018/small/fameex.jpg?1678950802\",\n    \"coincheck\": \"https://assets.coingecko.com/markets/images/18/small/Coincheck.jpg?1519703836\",\n    \"bit_com\": \"https://assets.coingecko.com/markets/images/823/small/bit_old.jpg?1669104460\",\n    \"sushiswap\": \"https://assets.coingecko.com/markets/images/576/small/2048x2048_Logo.png?1609208464\",\n    \"bitbns\": \"https://assets.coingecko.com/markets/images/541/small/HS7eNJdt_400x400.jpg?1592294824\",\n    \"apex_pro\": \"https://assets.coingecko.com/markets/images/1010/small/apex_pro.png?1670999139\",\n    \"balancer\": \"https://assets.coingecko.com/markets/images/673/small/balancer-v2.png?1621005731\",\n    \"currency\": \"https://assets.coingecko.com/markets/images/512/small/Currency.com_200x200.png?1582086630\",\n    \"traderjoe-v2-1-arbitrum\": \"https://assets.coingecko.com/markets/images/1126/small/traderjoe.png?1682383857\",\n    \"uniswap-bsc\": \"https://assets.coingecko.com/markets/images/1092/small/uniswap.jpeg?1678933206\",\n    \"spookyswap\": \"https://assets.coingecko.com/markets/images/662/small/spookyswap.png?1639279823\",\n    \"toko_crypto\": \"https://assets.coingecko.com/markets/images/501/small/toko.png?1578328877\",\n    \"bilaxy\": \"https://assets.coingecko.com/markets/images/193/small/bilaxy.png?1575876562\",\n    \"thena\": \"https://assets.coingecko.com/markets/images/1039/small/thena.png?1675060616\",\n    \"tokpie\": \"https://assets.coingecko.com/markets/images/436/small/logo_circle_100x100.png?1562226767\",\n    \"fastex\": \"https://assets.coingecko.com/markets/images/1091/small/fastex.png?1678776256\",\n    \"stocks_exchange\": \"https://assets.coingecko.com/markets/images/62/small/stex.png?1538384870\",\n    \"pancakeswap-v3-ethereum\": \"https://assets.coingecko.com/markets/images/1112/small/pancakeswap.jpeg?1680397048\",\n    \"quickswap\": \"https://assets.coingecko.com/markets/images/629/small/quick.png?1676951276\",\n    \"coinzoom\": \"https://assets.coingecko.com/markets/images/656/small/Up7Yiexp_400x400.png?1619165177\",\n    \"beethovenx\": \"https://assets.coingecko.com/markets/images/729/small/JrrbHgla_400x400.png?1635921837\",\n    \"kickex\": \"https://assets.coingecko.com/markets/images/635/small/KickEX_logo.png?1652324492\",\n    \"novadax\": \"https://assets.coingecko.com/markets/images/328/small/preview-full-novadax-exchange.jpg?1575440958\",\n    \"fraxswap_ethereum\": \"https://assets.coingecko.com/markets/images/911/small/JjqQ9ROz_400x400.jpeg?1656568640\",\n    \"sushiswap_arbitrum\": \"https://assets.coingecko.com/markets/images/701/small/sushiswap3.png?1631339015\",\n    \"tokenize\": \"https://assets.coingecko.com/markets/images/383/small/tokenize-exchange.png?1586138532\",\n    \"thena-fusion\": \"https://assets.coingecko.com/markets/images/1123/small/thena.jpeg?1681986498\",\n    \"shibaswap\": \"https://assets.coingecko.com/markets/images/686/small/shibaswap.png?1625986970\",\n    \"bitbay\": \"https://assets.coingecko.com/markets/images/2/small/logo_zonda.png?1638780494\",\n    \"traderjoe-v2-avalanche\": \"https://assets.coingecko.com/markets/images/1030/small/TraderJoe.png?1674093446\",\n    \"traderjoe\": \"https://assets.coingecko.com/markets/images/692/small/traderjoe.png?1628152581\",\n    \"equalizer\": \"https://assets.coingecko.com/markets/images/1021/small/equalizer.jpeg?1672970272\",\n    \"mute\": \"https://assets.coingecko.com/markets/images/1104/small/mute.io.jpg?1679899843\",\n    \"nomiswap_stable\": \"https://assets.coingecko.com/markets/images/997/small/nomiswap.jpeg?1667789286\",\n    \"stellaswap-v3\": \"https://assets.coingecko.com/markets/images/1052/small/stellaswap.jpeg?1675929920\",\n    \"pangolin\": \"https://assets.coingecko.com/markets/images/627/small/Pangolin_Logo_Yellow_Dark_Round.png?1669695691\",\n    \"traderjoe-v2-arbitrum\": \"https://assets.coingecko.com/markets/images/1031/small/TraderJoe.png?1674093818\",\n    \"arbidex\": \"https://assets.coingecko.com/markets/images/1097/small/arbidex.jpg?1679637024\",\n    \"emirex\": \"https://assets.coingecko.com/markets/images/592/small/Emirex.png?1602067691\",\n    \"foxbit\": \"https://assets.coingecko.com/markets/images/864/small/foxbit.jpeg?1652175698\",\n    \"hermes_protocol\": \"https://assets.coingecko.com/markets/images/904/small/0xb27BbeaACA2C00d6258C3118BAB6b5B6975161c8.png?1655374501\",\n    \"deribit_spot\": \"https://assets.coingecko.com/markets/images/1144/small/deribit.jpeg?1683796094\",\n    \"sushiswap_polygon_pos\": \"https://assets.coingecko.com/markets/images/668/small/sushiswap-polygon-matic.png?1620476993\",\n    \"apeswap_bsc\": \"https://assets.coingecko.com/markets/images/651/small/APESWAP.png?1618806870\",\n    \"archerswap\": \"https://assets.coingecko.com/markets/images/1095/small/archerswap.jpg?1679636355\",\n    \"velocore\": \"https://assets.coingecko.com/markets/images/1116/small/velocore.png?1680942683\",\n    \"wemix_fi\": \"https://assets.coingecko.com/markets/images/1020/small/wemix.png?1672817205\",\n    \"sushiswap_arbitrum_nova\": \"https://assets.coingecko.com/markets/images/944/small/sushiswap-arbitrum-nova.png?1661179683\",\n    \"mmfinance-v3-arbitrum\": \"https://assets.coingecko.com/markets/images/1120/small/mm_finance.jpeg?1681696221\",\n    \"kujira\": \"https://assets.coingecko.com/markets/images/918/small/FIN-Kujira_200w.png?1658214729\",\n    \"mm_finance\": \"https://assets.coingecko.com/markets/images/764/small/g7GDg3bv_400x400.jpg?1641539227\",\n    \"kyberswap_classic_arbitrum\": \"https://assets.coingecko.com/markets/images/1077/small/kyberswap.png?1678156709\",\n    \"defi_kingdoms_crystalvale\": \"https://assets.coingecko.com/markets/images/846/small/dfk_crystalvale_logo.png?1649052617\",\n    \"babydogeswap\": \"https://assets.coingecko.com/markets/images/986/small/BabyDogeSwap.png?1666232760\",\n    \"kumex\": \"https://assets.coingecko.com/markets/images/471/small/kucoin.png?1640588148\",\n    \"wigoswap\": \"https://assets.coingecko.com/markets/images/819/small/wigoswap-dex.jpeg?1646109656\",\n    \"apeswap_polygon\": \"https://assets.coingecko.com/markets/images/718/small/dCfHngLf_400x400.jpeg?1655093813\",\n    \"bancor\": \"https://assets.coingecko.com/markets/images/108/small/huTMi4ru_400x400.jpeg?1658212378\",\n    \"rcpswap\": \"https://assets.coingecko.com/markets/images/945/small/rcp-swap.png?1661179873\",\n    \"icecreamswap-core\": \"https://assets.coingecko.com/markets/images/1068/small/icecreamswap.png?1677765364\",\n    \"nomiswap\": \"https://assets.coingecko.com/markets/images/909/small/Wxo7M8g4_400x400.jpeg?1656297959\",\n    \"lfgswap-core\": \"https://assets.coingecko.com/markets/images/1067/small/lfgswap.jpeg?1677765103\",\n    \"uniswap_v3_celo\": \"https://assets.coingecko.com/markets/images/1099/small/uniswap.jpeg?1679733735\",\n    \"netswap\": \"https://assets.coingecko.com/markets/images/760/small/netswap.png?1641437122\",\n    \"sushiswap_bsc\": \"https://assets.coingecko.com/markets/images/720/small/sushiswap-polygon-matic.png?1634201163\",\n    \"stellaswap\": \"https://assets.coingecko.com/markets/images/797/small/stellaswap.jpg?1644378572\",\n    \"solarbeam\": \"https://assets.coingecko.com/markets/images/711/small/solarbeamlogo.png?1636094667\",\n    \"spiritswap\": \"https://assets.coingecko.com/markets/images/671/small/soully-full_m.png?1660609370\",\n    \"kyberswap_classic_optimism\": \"https://assets.coingecko.com/markets/images/1055/small/kyberswap.jpeg?1676351019\",\n    \"arbswap_arbitrum_one\": \"https://assets.coingecko.com/markets/images/1078/small/Arbswap.jpeg?1678162051\",\n    \"solisnek\": \"https://assets.coingecko.com/markets/images/1121/small/solisnek.jpeg?1681696649\",\n    \"wagyuswap\": \"https://assets.coingecko.com/markets/images/809/small/wagyuu.jpg?1645632618\",\n    \"pancakeswap_ethereum\": \"https://assets.coingecko.com/markets/images/987/small/pancakeswap.jpeg?1666345534\",\n    \"sushiswap_fantom\": \"https://assets.coingecko.com/markets/images/677/small/sushiswap-fantom.png?1621508759\",\n    \"kyberswap_elastic_avalanche\": \"https://assets.coingecko.com/markets/images/961/small/kyberswap.jpeg?1662693719\",\n    \"kyberswap_elastic_polygon\": \"https://assets.coingecko.com/markets/images/959/small/kyberswap.jpeg?1662616218\",\n    \"cherryswap\": \"https://assets.coingecko.com/markets/images/703/small/JH86gKQT_400x400.jpeg?1655278375\",\n    \"spacefi\": \"https://assets.coingecko.com/markets/images/1073/small/SpaceFi.png?1678089607\",\n    \"lif3\": \"https://assets.coingecko.com/markets/images/920/small/GJKa0NuI_400x400.jpeg?1658796410\",\n    \"defi_swap\": \"https://assets.coingecko.com/markets/images/637/small/crypto-com-mco-coin-logo.png?1616490722\",\n    \"bluemove\": \"https://assets.coingecko.com/markets/images/1135/small/bluemove.png?1683259059\",\n    \"loopring\": \"https://assets.coingecko.com/markets/images/542/small/Loopring.png?1592388445\",\n    \"baryon_network\": \"https://assets.coingecko.com/markets/images/922/small/baryon_network.jpeg?1659325746\",\n    \"zyberswap\": \"https://assets.coingecko.com/markets/images/1045/small/zyberswap.jpeg?1675725512\",\n    \"elk_finance_bsc\": \"https://assets.coingecko.com/markets/images/881/small/elk.jpeg?1654080525\",\n    \"soulswap\": \"https://assets.coingecko.com/markets/images/759/small/soulswap.jpeg?1641203564\",\n    \"kibbleswap\": \"https://assets.coingecko.com/markets/images/947/small/kibbleswap.png?1661308250\",\n    \"radioshack_bsc\": \"https://assets.coingecko.com/markets/images/868/small/radioshack.jpeg?1652917826\",\n    \"gemswap\": \"https://assets.coingecko.com/markets/images/1131/small/gemswap.jpeg?1682676891\",\n    \"3xcalibur\": \"https://assets.coingecko.com/markets/images/1009/small/3xcalibur.jpeg?1670899412\",\n    \"mars_ecosystem\": \"https://assets.coingecko.com/markets/images/778/small/mars.jpg?1641892399\",\n    \"sushiswap_avalanche\": \"https://assets.coingecko.com/markets/images/780/small/sushiswap-avalanche.png?1661179731\",\n    \"kyberswap_elastic_arbitrum\": \"https://assets.coingecko.com/markets/images/963/small/kyberswap.jpeg?1662695820\",\n    \"glide_finance\": \"https://assets.coingecko.com/markets/images/847/small/glide.jpeg?1649129722\",\n    \"trisolaris\": \"https://assets.coingecko.com/markets/images/756/small/trisolaris.ico?1640346886\",\n    \"bakeryswap\": \"https://assets.coingecko.com/markets/images/626/small/bakeryswap.png?1613740980\",\n    \"sushiswap_xdai\": \"https://assets.coingecko.com/markets/images/678/small/512x512_Logo_no_chop.png?1621847591\",\n    \"makiswap\": \"https://assets.coingecko.com/markets/images/767/small/twitterlogo_%281%29.jpg?1641547416\",\n    \"shadowswap\": \"https://assets.coingecko.com/markets/images/1069/small/shadowswap.jpeg?1677765495\",\n    \"darkknight\": \"https://assets.coingecko.com/markets/images/826/small/darkknight.png?1646540326\",\n    \"tealswap\": \"https://assets.coingecko.com/markets/images/1011/small/tealswap.jpeg?1671074777\",\n    \"sushiswap_celo\": \"https://assets.coingecko.com/markets/images/728/small/sushiswap.png?1635786149\",\n    \"swapr_arbitrum\": \"https://assets.coingecko.com/markets/images/710/small/swapr.jpeg?1633429570\",\n    \"elk_finance_polygon\": \"https://assets.coingecko.com/markets/images/885/small/elk.jpeg?1654149377\",\n    \"defi_kingdoms\": \"https://assets.coingecko.com/markets/images/721/small/defi_kingdoms.png?1634697345\",\n    \"tranquil_finance\": \"https://assets.coingecko.com/markets/images/850/small/tranquil_finance.jpeg?1649769691\",\n    \"sushiswap_harmony\": \"https://assets.coingecko.com/markets/images/700/small/sushiswap.png?1630817471\",\n    \"swapsicle\": \"https://assets.coingecko.com/markets/images/1088/small/swapsicle.jpg?1678338086\",\n    \"kuswap\": \"https://assets.coingecko.com/markets/images/685/small/kuswap.jpeg?1625637468\",\n    \"lif3-polygon\": \"https://assets.coingecko.com/markets/images/1032/small/lif3.png?1674096935\",\n    \"voltswap_meter\": \"https://assets.coingecko.com/markets/images/783/small/voltswap.png?1642745686\",\n    \"crodex\": \"https://assets.coingecko.com/markets/images/750/small/crodex.png?1639738492\",\n    \"lfgswap\": \"https://assets.coingecko.com/markets/images/969/small/lfgswap.jpeg?1664255378\",\n    \"lif3-bsc\": \"https://assets.coingecko.com/markets/images/1033/small/lif3.png?1674097218\",\n    \"pegasys\": \"https://assets.coingecko.com/markets/images/833/small/z7mrIY4N_400x400.png?1647313761\",\n    \"traderjoe-v2-bsc\": \"https://assets.coingecko.com/markets/images/1079/small/traderjoe.png?1678237192\",\n    \"swapr_xdai\": \"https://assets.coingecko.com/markets/images/670/small/dxswap-black.png?1620878646\",\n    \"occamx\": \"https://assets.coingecko.com/markets/images/845/small/faJ6ZSwv_400x400.jpg?1648920861\",\n    \"muesliswap-milkada\": \"https://assets.coingecko.com/markets/images/851/small/muesli.png?1652778632\",\n    \"alienfi\": \"https://assets.coingecko.com/markets/images/1083/small/alienfi.jpg?1678263783\",\n    \"animeswap\": \"https://assets.coingecko.com/markets/images/1096/small/animeswap.jpg?1679636866\",\n    \"kyberswap_elastic_optimism\": \"https://assets.coingecko.com/markets/images/962/small/kyberswap.jpeg?1662695089\",\n    \"croswap\": \"https://assets.coingecko.com/markets/images/1042/small/croswap.jpeg?1675232729\",\n    \"jswap\": \"https://assets.coingecko.com/markets/images/749/small/jswap.jpeg?1651047551\",\n    \"surfswap\": \"https://assets.coingecko.com/markets/images/1017/small/surfswap.jpeg?1671722347\",\n    \"klex\": \"https://assets.coingecko.com/markets/images/995/small/klex.png?1667456909\",\n    \"paintswap\": \"https://assets.coingecko.com/markets/images/723/small/paintswap.png?1634880497\",\n    \"nearpad\": \"https://assets.coingecko.com/markets/images/757/small/nearpad.png?1640773960\",\n    \"sphynx_brise\": \"https://assets.coingecko.com/markets/images/915/small/FkSDUwDc_400x400.jpeg?1658112136\",\n    \"radioshack_avalanche\": \"https://assets.coingecko.com/markets/images/870/small/radioshack.jpeg?1653372509\",\n    \"solarflare\": \"https://assets.coingecko.com/markets/images/834/small/Solarflare.png?1647326452\",\n    \"polaris\": \"https://assets.coingecko.com/markets/images/1065/small/polaris.jpeg?1677571612\",\n    \"fuzz_finance\": \"https://assets.coingecko.com/markets/images/839/small/fuzz.jpeg?1648191395\",\n    \"saitaswap-ethereum\": \"https://assets.coingecko.com/markets/images/1128/small/MRzM13ry_400x400.jpg?1682396517\",\n    \"tarmex\": \"https://assets.coingecko.com/markets/images/1041/small/ttsDxH-J_400x400.jpg?1675074660\",\n    \"fairdesk\": \"https://assets.coingecko.com/markets/images/1047/small/fairdesk.jpeg?1675753897\",\n    \"saitaswap-bsc\": \"https://assets.coingecko.com/markets/images/1130/small/MRzM13ry_400x400_%281%29.jpg?1682655294\",\n    \"chiliz\": \"https://assets.coingecko.com/markets/images/518/small/r6-s7Yi2_400x400.png?1666622417\",\n    \"dooar_ethereum\": \"https://assets.coingecko.com/markets/images/925/small/dooar.png?1660228098\",\n    \"mm-finance-arbitrum\": \"https://assets.coingecko.com/markets/images/1117/small/mm_finance.jpeg?1681092241\",\n    \"mmfinance_polygon\": \"https://assets.coingecko.com/markets/images/934/small/1.png?1660353574\",\n    \"honeyswap_polygon\": \"https://assets.coingecko.com/markets/images/688/small/honeyswap.png?1627465040\",\n    \"dooar_bsc\": \"https://assets.coingecko.com/markets/images/928/small/dooar.png?1660228091\",\n    \"beethoven_x_optimism\": \"https://assets.coingecko.com/markets/images/1040/small/beethovenx.jpeg?1675062796\",\n    \"hitbtc\": \"https://assets.coingecko.com/markets/images/24/small/hitbtc.png?1603975458\",\n    \"txbit\": \"https://assets.coingecko.com/markets/images/366/small/txbit.png?1674720388\",\n    \"biswap\": \"https://assets.coingecko.com/markets/images/745/small/rXUu-spA_400x400.jpeg?1654851329\",\n    \"gopax\": \"https://assets.coingecko.com/markets/images/144/small/gopax.jpg?1523527412\",\n    \"zigzag\": \"https://assets.coingecko.com/markets/images/873/small/zigzag.png?1653471335\",\n    \"cetus\": \"https://assets.coingecko.com/markets/images/1134/small/cetus.png?1683252681\",\n    \"bitstorage\": \"https://assets.coingecko.com/markets/images/394/small/Bitstorage.png?1680587088\",\n    \"chronos\": \"https://assets.coingecko.com/markets/images/1140/small/chronos.jpeg?1683536759\",\n    \"oceanex\": \"https://assets.coingecko.com/markets/images/341/small/Oceanex.png?1548153658\",\n    \"stormgain\": \"https://assets.coingecko.com/markets/images/608/small/CpDGk9Hn_400x400.png?1607582976\",\n    \"swappi\": \"https://assets.coingecko.com/markets/images/865/small/swappi.jpeg?1652427205\",\n    \"dodo_arbitrum\": \"https://assets.coingecko.com/markets/images/707/small/dodo_logo.png?1632849982\",\n    \"dodo_polygon\": \"https://assets.coingecko.com/markets/images/709/small/dodo_logo.png?1633078678\",\n    \"vvs\": \"https://assets.coingecko.com/markets/images/736/small/vvs-finance.jpeg?1636702806\",\n    \"trade_ogre\": \"https://assets.coingecko.com/markets/images/101/small/tradeogre.jpeg?1521428643\",\n    \"changelly\": \"https://assets.coingecko.com/markets/images/580/small/pro_logo_cmc.png?1600833621\",\n    \"spacefi_zksync\": \"https://assets.coingecko.com/markets/images/1105/small/spacefi.png?1679899924\",\n    \"catex\": \"https://assets.coingecko.com/markets/images/354/small/catex.png?1550735332\",\n    \"liquidswap\": \"https://assets.coingecko.com/markets/images/1057/small/liquidswap.png?1676533490\",\n    \"coinzix\": \"https://assets.coingecko.com/markets/images/1006/small/coinzix.png?1670384963\",\n    \"fubt\": \"https://assets.coingecko.com/markets/images/382/small/FUBT.png?1554432595\",\n    \"quickswap-polygon-zkevm\": \"https://assets.coingecko.com/markets/images/1109/small/quickswap-polygon-zkevm.jpeg?1680085726\",\n    \"kinesis_money\": \"https://assets.coingecko.com/markets/images/1122/small/kinesis.png?1681981053\",\n    \"bit2c\": \"https://assets.coingecko.com/markets/images/145/small/bit2c.jpeg?1523867875\",\n    \"lykke\": \"https://assets.coingecko.com/markets/images/111/small/transparent_star_200x200.png?1651142872\",\n    \"tomb_swap_fantom\": \"https://assets.coingecko.com/markets/images/821/small/xt2eSfi5_400x400.jpg?1646121970\",\n    \"verse\": \"https://assets.coingecko.com/markets/images/980/small/verse2.png?1672799829\",\n    \"solidly\": \"https://assets.coingecko.com/markets/images/832/small/Solidly.jpeg?1647231525\",\n    \"claimswap\": \"https://assets.coingecko.com/markets/images/912/small/9pbkueWn_400x400.jpeg?1656653942\",\n    \"crema_finance\": \"https://assets.coingecko.com/markets/images/878/small/U0VuehUR_400x400.jpeg?1653902419\",\n    \"huobi_japan\": \"https://assets.coingecko.com/markets/images/431/small/BitTrade.jpg?1680844242\",\n    \"deversifi\": \"https://assets.coingecko.com/markets/images/511/small/COINGECKO_DVF_200x200.jpeg?1657853638\",\n    \"quickswap_dogechain\": \"https://assets.coingecko.com/markets/images/954/small/quick.png?1676951270\",\n    \"spiritswap_v2\": \"https://assets.coingecko.com/markets/images/935/small/soully-full_m.png?1660612152\",\n    \"south_xchange\": \"https://assets.coingecko.com/markets/images/132/small/southxchange.png?1526357146\",\n    \"kaidex_v3\": \"https://assets.coingecko.com/markets/images/949/small/kaidex_v3.png?1661481078\",\n    \"honeyswap\": \"https://assets.coingecko.com/markets/images/599/small/honeyswap.png?1603246921\",\n    \"tethys\": \"https://assets.coingecko.com/markets/images/761/small/tethys.jpeg?1641375232\",\n    \"astroport\": \"https://assets.coingecko.com/markets/images/822/small/EPpDQTZo_400x400.jpeg?1646185725\",\n    \"gravity_finance\": \"https://assets.coingecko.com/markets/images/1027/small/gravity-finance.jpeg?1673611945\",\n    \"birake\": \"https://assets.coingecko.com/markets/images/419/small/Birake.png?1559647171\",\n    \"sterling\": \"https://assets.coingecko.com/markets/images/1082/small/sterlingfi.jpeg?1678260767\",\n    \"dystopia\": \"https://assets.coingecko.com/markets/images/884/small/dystopialogo.png?1654147890\",\n    \"milkyswap-milkada\": \"https://assets.coingecko.com/markets/images/843/small/milkyswap.jpeg?1648688455\",\n    \"saros\": \"https://assets.coingecko.com/markets/images/861/small/saros.png?1651828065\",\n    \"apeswap-arbitrum\": \"https://assets.coingecko.com/markets/images/1110/small/apeswap.jpeg?1681203122\",\n    \"traderjoe-v2-1-bsc\": \"https://assets.coingecko.com/markets/images/1125/small/traderjoe.png?1682383717\",\n    \"wannaswap\": \"https://assets.coingecko.com/markets/images/755/small/wannaswap.png?1640346842\",\n    \"aux\": \"https://assets.coingecko.com/markets/images/1053/small/aux.jpeg?1676003832\",\n    \"benswap_smart_bitcoin_cash\": \"https://assets.coingecko.com/markets/images/743/small/benswap-logo.png?1638787023\",\n    \"sakeswap\": \"https://assets.coingecko.com/markets/images/598/small/SakeSwap_Avatar_01B.png?1603187695\",\n    \"radioshack_polygon_pos\": \"https://assets.coingecko.com/markets/images/872/small/radioshack.jpeg?1653372997\",\n    \"aprobit\": \"https://assets.coingecko.com/markets/images/567/small/aprobit_logo.png?1597289585\",\n    \"sharkyswap\": \"https://assets.coingecko.com/markets/images/1063/small/sharky.jpg?1677420598\",\n    \"pangolin-songbird\": \"https://assets.coingecko.com/markets/images/971/small/Pangolin-DEX.png?1674720537\",\n    \"firebird_finance_polygon\": \"https://assets.coingecko.com/markets/images/730/small/firebird-finance.png?1636117048\",\n    \"swapfish\": \"https://assets.coingecko.com/markets/images/1024/small/swapfish.png?1673328541\",\n    \"uniwswap\": \"https://assets.coingecko.com/markets/images/976/small/uniwswap.jpeg?1664359840\",\n    \"openswap\": \"https://assets.coingecko.com/markets/images/770/small/T1k6Bn9b_400x400.jpg?1641787401\",\n    \"bithash\": \"https://assets.coingecko.com/markets/images/171/small/bithash.png?1562037390\",\n    \"biconomy\": \"https://assets.coingecko.com/markets/images/633/small/biconomy-cex.png?1642930152\",\n    \"azbit\": \"https://assets.coingecko.com/markets/images/787/small/logo.png?1679018698\",\n    \"dcoin\": \"https://assets.coingecko.com/markets/images/319/small/%E8%B5%84%E6%BA%90_4_3x_2.png?1590117049\",\n    \"cointiger\": \"https://assets.coingecko.com/markets/images/204/small/cointiger.png?1588935091\",\n    \"citex\": \"https://assets.coingecko.com/markets/images/390/small/CITEX-LOGO.png?1564028815\",\n    \"bit2me\": \"https://assets.coingecko.com/markets/images/1137/small/bit2me.png?1683531473\",\n    \"bullish_com\": \"https://assets.coingecko.com/markets/images/905/small/bullish_com.png?1655198360\",\n    \"bithumb_global\": \"https://assets.coingecko.com/markets/images/405/small/bitgloball.png?1639543042\",\n    \"ace\": \"https://assets.coingecko.com/markets/images/1016/small/ace.jpeg?1671694541\",\n    \"bitci\": \"https://assets.coingecko.com/markets/images/450/small/Bitci.jpg?1564137859\",\n    \"koinbazar\": \"https://assets.coingecko.com/markets/images/751/small/photo_2023-02-19_12-57-51.jpg?1678415170\",\n    \"vindax\": \"https://assets.coingecko.com/markets/images/388/small/uToizY7z_400x400.jpg?1556070669\",\n    \"exmarkets\": \"https://assets.coingecko.com/markets/images/363/small/42200149_2115011248752220_3911078373144657920_n.jpg?1551247813\",\n    \"localtrade\": \"https://assets.coingecko.com/markets/images/338/small/LT_Icon_Main.png?1664328842\",\n    \"fatbtc\": \"https://assets.coingecko.com/markets/images/295/small/363.png?1540287518\",\n    \"balancer_polygon\": \"https://assets.coingecko.com/markets/images/694/small/Balancer.png?1628656480\",\n    \"maiar\": \"https://assets.coingecko.com/markets/images/741/small/maiar-dex.png?1638433160\",\n    \"orderly_network\": \"https://assets.coingecko.com/markets/images/1015/small/Orderly_Network_Brandmark_Transparent.png?1671762725\",\n    \"dfyn\": \"https://assets.coingecko.com/markets/images/674/small/dyfn.png?1621239014\",\n    \"equilibre\": \"https://assets.coingecko.com/markets/images/1071/small/equilibre.jpeg?1677893664\",\n    \"financex\": \"https://assets.coingecko.com/markets/images/362/small/financex.png?1684128079\",\n    \"quipuswap\": \"https://assets.coingecko.com/markets/images/726/small/quipuswap.jpg?1655280417\",\n    \"bisq\": \"https://assets.coingecko.com/markets/images/244/small/bisq-network.jpg?1536725935\",\n    \"kaidex\": \"https://assets.coingecko.com/markets/images/727/small/Kaidex.PNG?1635338694\",\n    \"narkasa\": \"https://assets.coingecko.com/markets/images/573/small/narkasa.jpg?1599029564\",\n    \"zbx\": \"https://assets.coingecko.com/markets/images/634/small/zbx.png?1615265647\",\n    \"idex\": \"https://assets.coingecko.com/markets/images/123/small/idex.jpeg?1639662931\",\n    \"babyswap\": \"https://assets.coingecko.com/markets/images/853/small/babyswap.jpeg?1650853057\",\n    \"arthswap\": \"https://assets.coingecko.com/markets/images/877/small/logo_colour_bk.png?1653873751\",\n    \"mojitoswap\": \"https://assets.coingecko.com/markets/images/772/small/mojito.jpg?1641789194\",\n    \"alterdice\": \"https://assets.coingecko.com/markets/images/327/small/alterdice_%281%29.png?1604294926\",\n    \"dexalot\": \"https://assets.coingecko.com/markets/images/824/small/DEXALOT-Logo-Mark_4x.png?1679032482\",\n    \"ubeswap\": \"https://assets.coingecko.com/markets/images/667/small/ubeswap.png?1620395520\",\n    \"balanced_network\": \"https://assets.coingecko.com/markets/images/712/small/balanced.png?1633688429\",\n    \"b2bx\": \"https://assets.coingecko.com/markets/images/226/small/b2bx.jpg?1534242273\",\n    \"coinmargin\": \"https://assets.coingecko.com/markets/images/574/small/CoinMargin.png?1601532697\",\n    \"beamswap\": \"https://assets.coingecko.com/markets/images/793/small/T0wBtdfX_400x400.jpg?1644252792\",\n    \"knightswap\": \"https://assets.coingecko.com/markets/images/825/small/knightswap.png?1646540231\",\n    \"miaswap\": \"https://assets.coingecko.com/markets/images/1029/small/miaswap.jpeg?1673833511\",\n    \"vitex\": \"https://assets.coingecko.com/markets/images/502/small/ViteX.png?1578290945\",\n    \"solidlizard\": \"https://assets.coingecko.com/markets/images/1058/small/solidlizard.jpeg?1676859082\",\n    \"waves\": \"https://assets.coingecko.com/markets/images/140/small/Favicon_2x.png?1667531626\",\n    \"elk_finance_avax\": \"https://assets.coingecko.com/markets/images/790/small/elk_finance.jpg?1644215199\",\n    \"safe_trade\": \"https://assets.coingecko.com/markets/images/215/small/safe-trade-logo.png?1533195614\",\n    \"impossible_finance\": \"https://assets.coingecko.com/markets/images/766/small/9SxWPsH6_400x400.jpg?1641537968\",\n    \"yoshi_exchange_ftm\": \"https://assets.coingecko.com/markets/images/805/small/YoshiIcon.png?1645009739\",\n    \"bitexbook\": \"https://assets.coingecko.com/markets/images/375/small/logo_bitexbook.png?1553668542\",\n    \"voltage_finance\": \"https://assets.coingecko.com/markets/images/768/small/voltage-finance.png?1644051646\",\n    \"planet_finance\": \"https://assets.coingecko.com/markets/images/739/small/gJX6V4mK_400x400.jpg?1637856552\",\n    \"protofi\": \"https://assets.coingecko.com/markets/images/841/small/HAx3HSbC_400x400.jpeg?1648607486\",\n    \"wavelength\": \"https://assets.coingecko.com/markets/images/991/small/wavelength.jpeg?1666926930\",\n    \"xswap\": \"https://assets.coingecko.com/markets/images/1000/small/xswap.jpeg?1668698596\",\n    \"zenlink_astar\": \"https://assets.coingecko.com/markets/images/923/small/zenlink.jpeg?1659332905\",\n    \"terraswap\": \"https://assets.coingecko.com/markets/images/835/small/Terraswap.png?1647410415\",\n    \"freiexchange\": \"https://assets.coingecko.com/markets/images/153/small/freiexchange.jpg?1527734462\",\n    \"nachoswap\": \"https://assets.coingecko.com/markets/images/801/small/xHJFtmT3_400x400.png?1644906112\",\n    \"radioshack_ethereum\": \"https://assets.coingecko.com/markets/images/871/small/radioshack.jpeg?1653372680\",\n    \"hydra\": \"https://assets.coingecko.com/markets/images/958/small/7iRuAuNw_400x400.jpeg?1663810957\",\n    \"impossible_finance_v3\": \"https://assets.coingecko.com/markets/images/990/small/Impossible_Finance_V3.jpeg?1666853377\",\n    \"luaswap\": \"https://assets.coingecko.com/markets/images/601/small/logo.d77b343b.png?1605083693\",\n    \"baguette\": \"https://assets.coingecko.com/markets/images/699/small/baguette.png?1630816972\",\n    \"sphynx_swap\": \"https://assets.coingecko.com/markets/images/910/small/FkSDUwDc_400x400.jpeg?1656298578\",\n    \"dem_exchange\": \"https://assets.coingecko.com/markets/images/624/small/Demex_Logo_Symbol.png?1613628716\",\n    \"zenlink_moonbeam\": \"https://assets.coingecko.com/markets/images/830/small/iShot2022-03-14_14.54.22.png?1647240935\",\n    \"kdswap\": \"https://assets.coingecko.com/markets/images/977/small/kadena.png?1664434849\",\n    \"diffusion\": \"https://assets.coingecko.com/markets/images/856/small/diffusion_dex.jpeg?1651107465\",\n    \"yoshi_exchange_bsc\": \"https://assets.coingecko.com/markets/images/804/small/YoshiIcon.png?1645009248\",\n    \"baptswap\": \"https://assets.coingecko.com/markets/images/1106/small/baptswap.jpg?1679994357\",\n    \"zenlink_moonriver\": \"https://assets.coingecko.com/markets/images/829/small/200_200.png?1647233595\",\n    \"huckleberry\": \"https://assets.coingecko.com/markets/images/746/small/huckleberry.png?1639405377\",\n    \"autoshark_finance\": \"https://assets.coingecko.com/markets/images/788/small/autoshark.png?1643859744\",\n    \"btcsquare\": \"https://assets.coingecko.com/markets/images/149/small/btcsquare_logo.png?1594263864\",\n    \"photonswap\": \"https://assets.coingecko.com/markets/images/785/small/photonswap.jpg?1643105071\",\n    \"levinswap_xdai\": \"https://assets.coingecko.com/markets/images/679/small/levinswap.jpeg?1622079667\",\n    \"dogeswap\": \"https://assets.coingecko.com/markets/images/936/small/DogeSwap.png?1660614306\",\n    \"value_liquid_bsc\": \"https://assets.coingecko.com/markets/images/641/small/vswap.png?1617331539\",\n    \"yobit\": \"https://assets.coingecko.com/markets/images/46/small/yobit.png?1519799488\",\n    \"trubit\": \"https://assets.coingecko.com/markets/images/1103/small/trubit.png?1679894265\",\n    \"btc_alpha\": \"https://assets.coingecko.com/markets/images/155/small/btc-alpha.png?1653539884\",\n    \"mercatox\": \"https://assets.coingecko.com/markets/images/53/small/mercatox.jpg?1520933436\",\n    \"omgfin\": \"https://assets.coingecko.com/markets/images/396/small/Screenshot_11.png?1556858288\",\n    \"btcbox\": \"https://assets.coingecko.com/markets/images/154/small/btcbox.jpg?1525685758\",\n    \"platypus_finance\": \"https://assets.coingecko.com/markets/images/862/small/logo-platypus-v2-icon-only.png?1652157572\",\n    \"bitexlive\": \"https://assets.coingecko.com/markets/images/321/small/logo-short.png?1570602566\",\n    \"bw\": \"https://assets.coingecko.com/markets/images/326/small/bw.com.jpg?1548664400\",\n    \"pancakeswap_aptos\": \"https://assets.coingecko.com/markets/images/1059/small/pancakeswap.jpeg?1676882255\",\n    \"mdex\": \"https://assets.coingecko.com/markets/images/631/small/mdex.png?1614153051\",\n    \"zebpay\": \"https://assets.coingecko.com/markets/images/151/small/Zebpay.jpg?1552892533\",\n    \"acdx\": \"https://assets.coingecko.com/markets/images/605/small/acdx-xlogo.png?1671632249\",\n    \"bione\": \"https://assets.coingecko.com/markets/images/387/small/Bione_full.jpg?1596065675\",\n    \"mdex_bsc\": \"https://assets.coingecko.com/markets/images/676/small/Mdex.png?1621486546\",\n    \"globe_exchange\": \"https://assets.coingecko.com/markets/images/973/small/globe_exchange.png?1664353248\",\n    \"wanswap\": \"https://assets.coingecko.com/markets/images/798/small/OWIhzGn8_400x400.jpg?1644542972\",\n    \"bitsten\": \"https://assets.coingecko.com/markets/images/292/small/Bitsten_Exchange.jpg?1540449645\",\n    \"coinfield\": \"https://assets.coingecko.com/markets/images/188/small/coinfield.jpg?1529816716\",\n    \"fx_swap\": \"https://assets.coingecko.com/markets/images/981/small/functionx.jpeg?1665540108\",\n    \"bitubu\": \"https://assets.coingecko.com/markets/images/508/small/bitubu.png?1676439743\",\n    \"doveswap-v3\": \"https://assets.coingecko.com/markets/images/1132/small/dovish.jpeg?1683011017\",\n    \"yokaiswap\": \"https://assets.coingecko.com/markets/images/970/small/yokai.png?1664256377\",\n    \"nami_exchange\": \"https://assets.coingecko.com/markets/images/550/small/namiexchange_logo_200x200.png?1594954056\",\n    \"step-exchange\": \"https://assets.coingecko.com/markets/images/965/small/StepEx.jpg?1663228514\",\n    \"mimo\": \"https://assets.coingecko.com/markets/images/695/small/mimo.png?1629357559\",\n    \"graviex\": \"https://assets.coingecko.com/markets/images/206/small/graviex-logo.png?1531798374\",\n    \"btc_trade_ua\": \"https://assets.coingecko.com/markets/images/169/small/btctradeua.png?1527501701\",\n    \"probit_kr\": \"https://assets.coingecko.com/markets/images/690/small/probit_kr.jpg?1627376209\",\n    \"kyberswap_classic_avalanche\": \"https://assets.coingecko.com/markets/images/704/small/kyberswap.png?1638932614\",\n    \"swych\": \"https://assets.coingecko.com/markets/images/937/small/Swych-500x500.png?1660739362\",\n    \"dao_swap\": \"https://assets.coingecko.com/markets/images/972/small/DAO_Maker.jpeg?1664344167\",\n    \"chainex\": \"https://assets.coingecko.com/markets/images/275/small/VTwwcyVk_400x400.jpg?1538644568\",\n    \"acsi_finance\": \"https://assets.coingecko.com/markets/images/696/small/acsi.png?1632133946\",\n    \"oreoswap\": \"https://assets.coingecko.com/markets/images/1062/small/oreoswap.png?1676883244\",\n    \"polycat_finance\": \"https://assets.coingecko.com/markets/images/771/small/polycat.png?1642418816\",\n    \"kyberswap_classic_bsc\": \"https://assets.coingecko.com/markets/images/706/small/kyberswap.png?1638932575\",\n    \"julswap\": \"https://assets.coingecko.com/markets/images/632/small/Logo-D-Unicorn.png?1644857375\",\n    \"mindgames-arbitrum\": \"https://assets.coingecko.com/markets/images/1089/small/Mindgames.jpeg?1678632413\",\n    \"lydia_finance\": \"https://assets.coingecko.com/markets/images/763/small/512_pure_logo.png?1641567787\",\n    \"hanbitco\": \"https://assets.coingecko.com/markets/images/488/small/200_%EB%B2%A0%EC%9D%B4%EC%A7%80.png?1584686295\",\n    \"globiance\": \"https://assets.coingecko.com/markets/images/1072/small/globiance.jpeg?1678083089\",\n    \"sharkswap\": \"https://assets.coingecko.com/markets/images/890/small/sharkswap.jpeg?1654675693\",\n    \"zipswap\": \"https://assets.coingecko.com/markets/images/854/small/zipswap.jpeg?1650892664\",\n    \"polydex\": \"https://assets.coingecko.com/markets/images/792/small/pic.png?1644215539\",\n    \"forteswap\": \"https://assets.coingecko.com/markets/images/1038/small/forte.png?1674806811\",\n    \"comethswap\": \"https://assets.coingecko.com/markets/images/644/small/comethswap.png?1617361625\",\n    \"morpheus_swap\": \"https://assets.coingecko.com/markets/images/781/small/46ygcxie_400x400.jpg?1642560395\",\n    \"polyzap\": \"https://assets.coingecko.com/markets/images/680/small/polyzap-swap.jpeg?1622079597\",\n    \"hakuswap\": \"https://assets.coingecko.com/markets/images/802/small/AoDC8sk-_400x400.jpeg?1644982842\",\n    \"amaterasu\": \"https://assets.coingecko.com/markets/images/886/small/amaterasu-dex.png?1654227604\",\n    \"powswap\": \"https://assets.coingecko.com/markets/images/967/small/powswap.jpeg?1663928549\",\n    \"unnamed\": \"https://assets.coingecko.com/markets/images/478/small/H6tgDbj.png?1570166355\",\n    \"balancer_arbitrum\": \"https://assets.coingecko.com/markets/images/716/small/balancer.png?1634040072\",\n    \"bcex\": \"https://assets.coingecko.com/markets/images/190/small/bcex.jpg?1529987152\",\n    \"velocimeter_v2\": \"https://assets.coingecko.com/markets/images/1094/small/velocimeter.jpg?1679480253\",\n    \"bitonbay\": \"https://assets.coingecko.com/markets/images/280/small/bitonbay-exchange.png?1539072657\",\n    \"integral_size\": \"https://assets.coingecko.com/markets/images/1022/small/integral_size.jpeg?1672994513\",\n    \"balancer_v1\": \"https://assets.coingecko.com/markets/images/537/small/Balancer.png?1591631731\",\n    \"tdax\": \"https://assets.coingecko.com/markets/images/231/small/satangpro.jpg?1549866880\",\n    \"nanu_exchange\": \"https://assets.coingecko.com/markets/images/252/small/nanu-exchange.jpg?1536725777\",\n    \"stake_cube\": \"https://assets.coingecko.com/markets/images/429/small/sc-4096x4096.png?1636537469\",\n    \"kyberswap_classic_polygon\": \"https://assets.coingecko.com/markets/images/705/small/kyberswap.png?1638932592\",\n    \"bitbegin\": \"https://assets.coingecko.com/markets/images/317/small/3Wmuydm.png?1678415317\",\n    \"cronaswap\": \"https://assets.coingecko.com/markets/images/762/small/cronaswap.png?1641437204\",\n    \"excalibur\": \"https://assets.coingecko.com/markets/images/836/small/Excalibur.jpeg?1647829951\",\n    \"purcow\": \"https://assets.coingecko.com/markets/images/306/small/Purcow.png?1540548096\",\n    \"viperswap\": \"https://assets.coingecko.com/markets/images/666/small/viperswap.png?1620368750\",\n    \"tangoswap\": \"https://assets.coingecko.com/markets/images/784/small/w3UpakzC_400x400.jpg?1642748177\",\n    \"oracleswap\": \"https://assets.coingecko.com/markets/images/1127/small/oracle.jpeg?1682387660\",\n    \"auroraswap\": \"https://assets.coingecko.com/markets/images/758/small/auroraswap.png?1640773986\",\n    \"curve_ethereum\": \"https://assets.coingecko.com/markets/images/538/small/Curve.png?1591605481\",\n    \"jupiter\": \"https://assets.coingecko.com/markets/images/815/small/jupiter.png?1656742248\",\n    \"openocean_finance\": \"https://assets.coingecko.com/markets/images/713/small/ooe.png?1633688592\",\n    \"sunswap_v1\": \"https://assets.coingecko.com/markets/images/840/small/pMErCWk4_400x400.jpeg?1648638373\",\n    \"woofi\": \"https://assets.coingecko.com/markets/images/919/small/WOOFi-Logo.png?1658231713\",\n    \"bibox\": \"https://assets.coingecko.com/markets/images/114/small/bibox.jpg?1520752603\",\n    \"raydium2\": \"https://assets.coingecko.com/markets/images/649/small/raydium.jpeg?1619080851\",\n    \"dodo\": \"https://assets.coingecko.com/markets/images/588/small/dodoex.png?1601864278\",\n    \"defichain\": \"https://assets.coingecko.com/markets/images/831/small/symbol-defi-blockchain_200.png?1646984909\",\n    \"wombat\": \"https://assets.coingecko.com/markets/images/1004/small/wombat.png?1669788032\",\n    \"thorswap\": \"https://assets.coingecko.com/markets/images/732/small/thorchain.jpg?1647487378\",\n    \"upbit_indonesia\": \"https://assets.coingecko.com/markets/images/483/small/UM9P5MNb_400x400.png?1571029017\",\n    \"thorwallet\": \"https://assets.coingecko.com/markets/images/993/small/thorwallet.jpeg?1667813174\",\n    \"altcointrader\": \"https://assets.coingecko.com/markets/images/661/small/Altcoin.png?1619755597\",\n    \"unisat\": \"https://assets.coingecko.com/markets/images/1143/small/unisat.jpeg?1683795027\",\n    \"minswap\": \"https://assets.coingecko.com/markets/images/983/small/minswap.png?1665723834\",\n    \"powertrade\": \"https://assets.coingecko.com/markets/images/827/small/powertrade.jpeg?1646810613\",\n    \"curve_arbitrum\": \"https://assets.coingecko.com/markets/images/924/small/Curve.png?1659429551\",\n    \"wingriders\": \"https://assets.coingecko.com/markets/images/1061/small/wingriders.png?1676882632\",\n    \"zipmex\": \"https://assets.coingecko.com/markets/images/616/small/ZMT_Token.png?1637254537\",\n    \"ref_finance\": \"https://assets.coingecko.com/markets/images/697/small/ref_finance.jpg?1629873564\",\n    \"astroport_v2\": \"https://assets.coingecko.com/markets/images/1081/small/astroport.jpeg?1678247137\",\n    \"curve_polygon\": \"https://assets.coingecko.com/markets/images/926/small/Curve.png?1659951652\",\n    \"clipper_ethereum\": \"https://assets.coingecko.com/markets/images/717/small/clipper.png?1634175867\",\n    \"tinyman\": \"https://assets.coingecko.com/markets/images/952/small/tinyman.jpeg?1661757528\",\n    \"ferro_protocol\": \"https://assets.coingecko.com/markets/images/1075/small/ferro_protocol.png?1678088319\",\n    \"thala\": \"https://assets.coingecko.com/markets/images/1118/small/thala.jpeg?1681197840\",\n    \"saber\": \"https://assets.coingecko.com/markets/images/738/small/saber.png?1637607391\",\n    \"bitfex\": \"https://assets.coingecko.com/markets/images/335/small/e8Qto1_t_400x400.jpg?1547027830\",\n    \"curve_fantom\": \"https://assets.coingecko.com/markets/images/927/small/W1sQNVWo_400x400.jpeg?1660026138\",\n    \"clipper_optimism\": \"https://assets.coingecko.com/markets/images/875/small/oJ7a91sA_400x400.jpeg?1653576620\",\n    \"curve_avalanche\": \"https://assets.coingecko.com/markets/images/921/small/Curve.png?1659341513\",\n    \"abcc\": \"https://assets.coingecko.com/markets/images/172/small/abcc.png?1546228821\",\n    \"sundaeswap\": \"https://assets.coingecko.com/markets/images/974/small/sundaeswap.png?1664353388\",\n    \"dforceswap_polygon\": \"https://assets.coingecko.com/markets/images/1093/small/7h5VV8EE_400x400.jpg?1679558651\",\n    \"loopring_amm\": \"https://assets.coingecko.com/markets/images/618/small/Loopring.jpg?1611557168\",\n    \"acala_swap\": \"https://assets.coingecko.com/markets/images/883/small/acala.jpeg?1654145207\",\n    \"kava\": \"https://assets.coingecko.com/markets/images/719/small/photo_2021-10-14_19-47-17.jpg?1634212486\",\n    \"opnx_spot\": \"https://assets.coingecko.com/markets/images/1114/small/opnx.jpeg?1680755486\",\n    \"bancor_v3\": \"https://assets.coingecko.com/markets/images/916/small/huTMi4ru_400x400.jpeg?1658212390\",\n    \"curve_optimism\": \"https://assets.coingecko.com/markets/images/931/small/W1sQNVWo_400x400.jpeg?1660124966\",\n    \"iziswap\": \"https://assets.coingecko.com/markets/images/1003/small/iziswap.png?1669273186\",\n    \"dforceswap_arbitrum\": \"https://assets.coingecko.com/markets/images/1086/small/dforce.jpeg?1678292727\",\n    \"four_swap\": \"https://assets.coingecko.com/markets/images/857/small/EdGSwj0y_400x400.jpg?1651219424\",\n    \"oraidex\": \"https://assets.coingecko.com/markets/images/992/small/oraidex.png?1667441572\",\n    \"sovryn\": \"https://assets.coingecko.com/markets/images/1001/small/sovryn.png?1669089390\",\n    \"bitinka\": \"https://assets.coingecko.com/markets/images/235/small/bitinka-exchange.jpg?1535514362\",\n    \"zilswap\": \"https://assets.coingecko.com/markets/images/652/small/1Artboard_2_2x.png?1628058377\",\n    \"clipper_polygon\": \"https://assets.coingecko.com/markets/images/740/small/clipper.png?1638320772\",\n    \"polkaswap\": \"https://assets.coingecko.com/markets/images/715/small/PSWAP.png?1633690422\",\n    \"curve_xdai\": \"https://assets.coingecko.com/markets/images/930/small/W1sQNVWo_400x400.jpeg?1660125046\",\n    \"karura_swap\": \"https://assets.coingecko.com/markets/images/880/small/z6Z3A427_400x400.jpeg?1653986413\",\n    \"stellar_term\": \"https://assets.coingecko.com/markets/images/233/small/stellarterm-decentralized-exchange.png?1535430497\",\n    \"one_inch_liquidity_protocol\": \"https://assets.coingecko.com/markets/images/611/small/1inch-liquidity-protocol.png?1608873020\",\n    \"plenty_network\": \"https://assets.coingecko.com/markets/images/1049/small/plenty_network.jpeg?1675753905\",\n    \"flatqube\": \"https://assets.coingecko.com/markets/images/879/small/RXXNTXEA_400x400.jpeg?1654074517\",\n    \"alexgo\": \"https://assets.coingecko.com/markets/images/951/small/alexgo.png?1661757431\",\n    \"concave\": \"https://assets.coingecko.com/markets/images/848/small/concave.jpeg?1649166994\",\n    \"crescent\": \"https://assets.coingecko.com/markets/images/932/small/PeQ_j_ca_400x400.jpeg?1660212972\",\n    \"paymium\": \"https://assets.coingecko.com/markets/images/133/small/paymium_logo-ico.png?1670424600\",\n    \"cswap\": \"https://assets.coingecko.com/markets/images/1102/small/cswap.jpeg?1679894077\",\n    \"libre_swap\": \"https://assets.coingecko.com/markets/images/1090/small/libre_swap.jpeg?1678776162\",\n    \"solidlydex\": \"https://assets.coingecko.com/markets/images/1023/small/solid128.png?1673234064\",\n    \"inx_one\": \"https://assets.coingecko.com/markets/images/1076/small/inx_one.jpeg?1678088419\",\n    \"spicyswap\": \"https://assets.coingecko.com/markets/images/988/small/spicyswap.png?1666694881\",\n    \"energiswap\": \"https://assets.coingecko.com/markets/images/860/small/Energi.jpeg?1651826135\",\n    \"kyberswap_classic_ethereum\": \"https://assets.coingecko.com/markets/images/647/small/kyberswap.png?1638932482\",\n    \"kaddex\": \"https://assets.coingecko.com/markets/images/1070/small/kaddex.jpeg?1677769912\",\n    \"ellipsis_finance\": \"https://assets.coingecko.com/markets/images/1043/small/ellipsis.jpeg?1675317061\",\n    \"muesliswap\": \"https://assets.coingecko.com/markets/images/975/small/muesliswap.png?1664353445\",\n    \"ruby_exchange\": \"https://assets.coingecko.com/markets/images/953/small/Coin-01.png?1675866327\",\n    \"newdex\": \"https://assets.coingecko.com/markets/images/314/small/4bFYszpP_400x400.jpg?1541110686\",\n    \"spartan_protocol\": \"https://assets.coingecko.com/markets/images/867/small/C2obYdLV_400x400.png?1653098075\",\n    \"magicswap\": \"https://assets.coingecko.com/markets/images/1037/small/magicswap.jpeg?1674725497\",\n    \"openleverage\": \"https://assets.coingecko.com/markets/images/929/small/256x256_OLE_Token_Logo.png?1660113966\",\n    \"elk_finance_ethereum\": \"https://assets.coingecko.com/markets/images/891/small/elk.jpeg?1655004493\",\n    \"swop_fi\": \"https://assets.coingecko.com/markets/images/659/small/yztclCs.png?1619603199\",\n    \"sinegy\": \"https://assets.coingecko.com/markets/images/615/small/sinegy-logo-200x200px.png?1610953531\",\n    \"dforceswap_optimism\": \"https://assets.coingecko.com/markets/images/1087/small/dforce.jpeg?1678292719\",\n    \"namebase\": \"https://assets.coingecko.com/markets/images/510/small/namebase.jpg?1581476165\",\n    \"leonicornswap\": \"https://assets.coingecko.com/markets/images/803/small/leonicornswap.jpg?1645008350\",\n    \"secondbtc\": \"https://assets.coingecko.com/markets/images/320/small/secondbtc.png?1554861587\",\n    \"yodeswap\": \"https://assets.coingecko.com/markets/images/946/small/yodeswap.png?1661307973\",\n    \"xcad\": \"https://assets.coingecko.com/markets/images/978/small/xcad.png?1664441450\",\n    \"zebitex\": \"https://assets.coingecko.com/markets/images/566/small/zebitex_logo.png?1596782748\",\n    \"coingi\": \"https://assets.coingecko.com/markets/images/170/small/coingi.png?1527501455\",\n    \"curve_moonbeam\": \"https://assets.coingecko.com/markets/images/1051/small/curve.jpeg?1676437461\",\n    \"neutroswap\": \"https://assets.coingecko.com/markets/images/1133/small/neutroswap.jpeg?1683011987\",\n    \"loop_markets\": \"https://assets.coingecko.com/markets/images/813/small/loop.png?1646224514\",\n    \"coinfalcon\": \"https://assets.coingecko.com/markets/images/126/small/cinfalcon.jpg?1522142307\",\n    \"hebeswap\": \"https://assets.coingecko.com/markets/images/955/small/hebeswap.jpeg?1662010489\",\n    \"dove_wallet\": \"https://assets.coingecko.com/markets/images/453/small/btx.png?1653461006\",\n    \"capricorn\": \"https://assets.coingecko.com/markets/images/913/small/9QiVZDbl_400x400.jpeg?1657006333\",\n    \"tetuswap\": \"https://assets.coingecko.com/markets/images/800/small/XZdZhhl2_400x400.jpeg?1644843781\",\n    \"duckydefi\": \"https://assets.coingecko.com/markets/images/888/small/duckydefi.png?1654503252\",\n    \"spice_trade_avalanche\": \"https://assets.coingecko.com/markets/images/956/small/Spice_Trade.jpeg?1662356802\",\n    \"tropical_finance\": \"https://assets.coingecko.com/markets/images/774/small/8CF96417-4FC7-4E3B-857C-E157F4060DED.png?1641794033\",\n    \"pinkswap\": \"https://assets.coingecko.com/markets/images/681/small/pinkswap.png?1623330530\",\n    \"altmarkets\": \"https://assets.coingecko.com/markets/images/269/small/altmarkets.png?1550836537\",\n    \"oolongswap\": \"https://assets.coingecko.com/markets/images/734/small/Capture.PNG?1636633723\",\n    \"dforceswap_bsc\": \"https://assets.coingecko.com/markets/images/1085/small/dforce.jpeg?1678292734\",\n    \"greenhouse_dex\": \"https://assets.coingecko.com/markets/images/889/small/ANnNLN8x_400x400.jpeg?1654575956\",\n    \"1bch\": \"https://assets.coingecko.com/markets/images/791/small/m4FKR6aS_400x400.jpg?1644214295\",\n    \"dogeshrek\": \"https://assets.coingecko.com/markets/images/939/small/dogeshrek.png?1660700140\",\n    \"saucerswap_dex\": \"https://assets.coingecko.com/markets/images/1014/small/sswap.png?1672109031\",\n    \"empiredex_empire\": \"https://assets.coingecko.com/markets/images/1064/small/empire.jpeg?1677571160\",\n    \"bobswap_polygon\": \"https://assets.coingecko.com/markets/images/1056/small/zkBob.png?1676359700\",\n    \"binance_dex_mini\": \"missing_small.png\",\n    \"swapr_ethereum\": \"https://assets.coingecko.com/markets/images/689/small/dxswap-black.png?1627464962\",\n    \"defi_plaza\": \"https://assets.coingecko.com/markets/images/908/small/a8Qe_bCU_400x400.png?1656300829\",\n    \"cantoswap\": \"https://assets.coingecko.com/markets/images/1050/small/cantoswap.png?1675753952\"\n};\nexport default EXCHANGE_ICONS;\n","export function amountFormatter(amount, precision = 3) {\n    if (amount === null || amount === undefined || amount === 0) {\n        return '';\n    }\n    // Quadrillion (Q) - 10^15\n    if (amount >= 1e15) {\n        return `${(amount / 1e15).toPrecision(precision)} Q`;\n    }\n    // Trillion (T) - 10^12\n    if (amount >= 1e12) {\n        return `${(amount / 1e12).toPrecision(precision)} T`;\n    }\n    // Billion (B) - 10^9\n    if (amount >= 1e9) {\n        return `${(amount / 1e9).toPrecision(precision)} B`;\n    }\n    // Million (M) - 10^6\n    if (amount > 1e6) {\n        return `${(amount / 1e6).toPrecision(precision)} M`;\n    }\n    // Thousand (K) - 10^3\n    if (amount > 1e3) {\n        return `${(amount / 1e3).toPrecision(precision)} K`;\n    }\n    // 1 till 1000\n    if (amount > 1) {\n        return `${amount.toFixed(2)}`;\n    }\n    // Numbers close to zero\n    if (amount > 1e-4) {\n        return `${amount.toFixed(5).replace(/\\.?0+$/, \"\")}`;\n    }\n    // Other small numbers\n    if (amount < 1) {\n        return `${amount.toExponential(3)}`;\n    }\n    // Default case\n    return `${amount.toPrecision(precision)}`;\n}\nexport function numberFormatter(amount) {\n    if (amount === null || amount === undefined || amount === 0) {\n        return '';\n    }\n    // Million (M) - 10^6\n    if (amount >= 1e6) {\n        return `${(amount / 1e6).toFixed(1)} M`;\n    }\n    // // Hundred Thousand (0.1M) - 10^5\n    // if (amount >= 1e5) {\n    // \treturn `${(amount / 1e6).toFixed(1)} M`;\n    // }\n    // Thousand (K) - 10^3\n    if (amount >= 1e3) {\n        return `${(amount / 1e3).toFixed(0)} K`;\n    }\n    // Default case\n    return `${amount.toFixed(0)}`;\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst COINGECKO_COINS_LIST_API = 'https://api.coingecko.com/api/v3/coins/list';\nconst COINGECKO_NFTS_LIST_API = 'https://api.coingecko.com/api/v3/nfts/list';\n// const COINGECKO_EXCHANGES_LIST_API = 'https://api.coingecko.com/api/v3/exchanges?per_page=250'\nexport function fetchCoinsList() {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const res = yield fetch(COINGECKO_COINS_LIST_API);\n            if (!res.ok) {\n                throw new Error(`Fetch error, Coingecko Coins List: ${res.status} ${res.statusText}`);\n            }\n            return yield res.json();\n        }\n        catch (error) {\n            console.error('Error fetching Coingecko Coins List:', error);\n            throw error;\n        }\n    });\n}\nexport function fetchNameSearch(searchQuery) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const res = yield fetch(`https://api.coingecko.com/api/v3/search?query=${searchQuery}`);\n            if (!res.ok) {\n                throw new Error(`Fetch error, Coingecko searchQuery ${searchQuery}: ${res.status} ${res.statusText}`);\n            }\n            return yield res.json();\n        }\n        catch (error) {\n            console.error('Error fetching  Coingecko searchQuery ${searchQuery}', error);\n            throw error;\n        }\n    });\n}\nexport function fetchTrendingCoins() {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const res = yield fetch('https://api.coingecko.com/api/v3/search/trending');\n            if (!res.ok) {\n                throw new Error(`Fetch error, Hot Coins: ${res.status} ${res.statusText}`);\n            }\n            return yield res.json();\n        }\n        catch (error) {\n            console.error('Error fetching Hot Coins:', error);\n            throw error;\n        }\n    });\n}\nexport function fetchCoinInfo(coinId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        coinId = coinId || 'bitcoin';\n        try {\n            const res = yield fetch(`https://api.coingecko.com/api/v3/coins/${coinId}?localization=false&market_data=true&community_data=true&developer_data=false&sparkline=false`);\n            if (!res.ok) {\n                throw new Error(`Fetch error, coin info data (${coinId}): ${res.status} ${res.statusText}`);\n            }\n            return yield res.json();\n        }\n        catch (error) {\n            console.error(`Error fetching coin info data (${coinId}):`, error);\n            throw error;\n        }\n    });\n}\nexport function fetchNftInfo(coinId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const res = yield fetch(`https://api.coingecko.com/api/v3/nfts/${coinId}`);\n            if (!res.ok) {\n                throw new Error(`Fetch error, NFT info data (${coinId}): ${res.status} ${res.statusText}`);\n            }\n            return yield res.json();\n        }\n        catch (error) {\n            console.error(`Error fetching NFT info data (${coinId}):`, error);\n            throw error;\n        }\n    });\n}\nexport function fetchPriceHistoryData(coinId, quote, chartRange) {\n    return __awaiter(this, void 0, void 0, function* () {\n        coinId = coinId || 'bitcoin';\n        quote = quote || 'usd';\n        chartRange = chartRange || '30';\n        try {\n            const res = yield fetch(`https://api.coingecko.com/api/v3/coins/${coinId}/market_chart?vs_currency=${quote}&days=${chartRange}&interval=daily`);\n            if (!res.ok) {\n                throw new Error(`Fetch error, price history data (${coinId}): ${res.status} ${res.statusText}`);\n            }\n            return yield res.json();\n        }\n        catch (error) {\n            console.error(`Error fetching price history data (${coinId}):`, error);\n            throw error;\n        }\n    });\n}\nexport function fetchTokenTxs(domainName, contractAddress, txAmount) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const res = yield fetch(`https://api.${domainName}/api?module=account&action=tokentx&contractaddress=${contractAddress}&page=1&offset=${txAmount}&startblock=0&endblock=99999999&sort=desc`);\n            if (!res.ok) {\n                throw new Error(`Fetch error, Eth token txs info: ${res.status} ${res.statusText}`);\n            }\n            return yield res.json();\n        }\n        catch (error) {\n            console.error('Error fetching Eth token txs info:', error);\n            throw error;\n        }\n    });\n}\nexport function fetchNftList() {\n    return __awaiter(this, void 0, void 0, function* () {\n        let allNfts = [];\n        for (let page = 1; page < 100; page++) {\n            try {\n                yield new Promise((resolve) => setTimeout(resolve, 500));\n                const res = yield fetch(`${COINGECKO_NFTS_LIST_API}?per_page=250&page=${page}`);\n                if (!res.ok) {\n                    console.log(`Fetch error, API info page ${page}: ${res.status} ${res.statusText}`);\n                    return allNfts;\n                }\n                const data = yield res.json();\n                allNfts.push(...data);\n                if (data.length < 250) {\n                    return allNfts;\n                }\n            }\n            catch (error) {\n                console.error(`Error fetching API info page ${page}:`, error);\n                return allNfts;\n            }\n        }\n        return allNfts;\n    });\n}\n// used to fetch exchanges\n// export async function fetchExchangesList(): Promise<any> {\n// \ttry {\n// \t\tlet pageNr = 1;\n// \t\tlet perPage = 250;\n// \t\tlet allExchanges = [];\n//\n// \t\twhile (true) {\n// \t\t\tconst res = await fetch(`${COINGECKO_EXCHANGES_LIST_API}?per_page=${perPage}&page=${pageNr}`);\n//\n// \t\t\tif (!res.ok) {\n// \t\t\t\tthrow new Error(`Fetch error, Coingecko exchanges List: ${res.status} ${res.statusText}`);\n// \t\t\t}\n// \t\t\tconst exchanges = await res.json();\n// \t\t\tallExchanges.push(...exchanges);\n// \t\t\tif (exchanges.length < perPage) {\n// \t\t\t\t// Reached the last page, exit the loop\n// \t\t\t\tbreak;\n// \t\t\t}\n// \t\t\tpageNr++;\n// \t\t}\n//\n// \t\tconst exchangesObject = allExchanges.reduce((acc, exchange) => {\n// \t\t\tacc[exchange.id] = exchange.image;\n// \t\t\t// acc[`\"${exchange.id}\"`] = exchange.image;\n// \t\t\treturn acc;\n// \t\t}, {});\n//\n// \t\tconsole.log(\"exchangesObject\", JSON.stringify(exchangesObject, null, 2))\n// \t\tconsole.log(\"exchangesObject.length\", Object.keys(exchangesObject).length)\n//\n// \t\t} catch (error) {\n// \t\t\tconsole.error('Error fetching Coingecko exchanges List:', error);\n// \t\t\tthrow error;\n// \t\t}\n// }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"popup\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcrypto_explorer_extension_v2\"] = self[\"webpackChunkcrypto_explorer_extension_v2\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_react-dom_index_js\",\"vendors-node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sour-81a8ca\"], () => (__webpack_require__(\"./src/popup/popup.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}